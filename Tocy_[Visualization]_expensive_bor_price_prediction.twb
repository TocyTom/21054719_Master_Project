<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20221.22.0324.2209                               -->
<workbook original-version='18.1' source-build='2022.1.0 (20221.22.0324.2209)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='processed_dataframe_CRIME' inline='true' name='federated.13655hh0c8dej418pt7g4122sbxf' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='processed_dataframe_CRIME' name='textscan.12q8s5b1meehjb1f5uk950d79b24'>
            <connection class='textscan' directory='C:/Users/Admin/OneDrive/Dissertation/Tocy_Works_Final/Tablaeu_Dataset_edited' filename='processed_dataframe_CRIME.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.12q8s5b1meehjb1f5uk950d79b24' name='processed_dataframe_CRIME.csv' table='[processed_dataframe_CRIME#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='area' ordinal='0' />
            <column datatype='integer' name='year' ordinal='1' />
            <column datatype='real' name='median_salary' ordinal='2' />
            <column datatype='real' name='life_satisfaction' ordinal='3' />
            <column datatype='real' name='mean_salary' ordinal='4' />
            <column datatype='real' name='population_size' ordinal='5' />
            <column datatype='real' name='number_of_jobs' ordinal='6' />
            <column datatype='real' name='area_size' ordinal='7' />
            <column datatype='real' name='no_of_houses' ordinal='8' />
            <column datatype='real' name='average_price' ordinal='9' />
            <column datatype='real' name='houses_sold' ordinal='10' />
            <column datatype='real' name='no_of_crimes' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.12q8s5b1meehjb1f5uk950d79b24' name='processed_dataframe_CRIME.csv' table='[processed_dataframe_CRIME#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='area' ordinal='0' />
            <column datatype='integer' name='year' ordinal='1' />
            <column datatype='real' name='median_salary' ordinal='2' />
            <column datatype='real' name='life_satisfaction' ordinal='3' />
            <column datatype='real' name='mean_salary' ordinal='4' />
            <column datatype='real' name='population_size' ordinal='5' />
            <column datatype='real' name='number_of_jobs' ordinal='6' />
            <column datatype='real' name='area_size' ordinal='7' />
            <column datatype='real' name='no_of_houses' ordinal='8' />
            <column datatype='real' name='average_price' ordinal='9' />
            <column datatype='real' name='houses_sold' ordinal='10' />
            <column datatype='real' name='no_of_crimes' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[processed_dataframe_CRIME.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>area</remote-name>
            <remote-type>129</remote-type>
            <local-name>[area]</local-name>
            <parent-name>[processed_dataframe_CRIME.csv]</parent-name>
            <remote-alias>area</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[processed_dataframe_CRIME.csv_7492CB1203C843C8BDAAA73E33182026]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[processed_dataframe_CRIME.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[processed_dataframe_CRIME.csv_7492CB1203C843C8BDAAA73E33182026]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_salary</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_salary]</local-name>
            <parent-name>[processed_dataframe_CRIME.csv]</parent-name>
            <remote-alias>median_salary</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[processed_dataframe_CRIME.csv_7492CB1203C843C8BDAAA73E33182026]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_satisfaction</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_satisfaction]</local-name>
            <parent-name>[processed_dataframe_CRIME.csv]</parent-name>
            <remote-alias>life_satisfaction</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[processed_dataframe_CRIME.csv_7492CB1203C843C8BDAAA73E33182026]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mean_salary</remote-name>
            <remote-type>5</remote-type>
            <local-name>[mean_salary]</local-name>
            <parent-name>[processed_dataframe_CRIME.csv]</parent-name>
            <remote-alias>mean_salary</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[processed_dataframe_CRIME.csv_7492CB1203C843C8BDAAA73E33182026]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_size</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_size]</local-name>
            <parent-name>[processed_dataframe_CRIME.csv]</parent-name>
            <remote-alias>population_size</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[processed_dataframe_CRIME.csv_7492CB1203C843C8BDAAA73E33182026]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number_of_jobs</remote-name>
            <remote-type>5</remote-type>
            <local-name>[number_of_jobs]</local-name>
            <parent-name>[processed_dataframe_CRIME.csv]</parent-name>
            <remote-alias>number_of_jobs</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[processed_dataframe_CRIME.csv_7492CB1203C843C8BDAAA73E33182026]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>area_size</remote-name>
            <remote-type>5</remote-type>
            <local-name>[area_size]</local-name>
            <parent-name>[processed_dataframe_CRIME.csv]</parent-name>
            <remote-alias>area_size</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[processed_dataframe_CRIME.csv_7492CB1203C843C8BDAAA73E33182026]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>no_of_houses</remote-name>
            <remote-type>5</remote-type>
            <local-name>[no_of_houses]</local-name>
            <parent-name>[processed_dataframe_CRIME.csv]</parent-name>
            <remote-alias>no_of_houses</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[processed_dataframe_CRIME.csv_7492CB1203C843C8BDAAA73E33182026]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>average_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[average_price]</local-name>
            <parent-name>[processed_dataframe_CRIME.csv]</parent-name>
            <remote-alias>average_price</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[processed_dataframe_CRIME.csv_7492CB1203C843C8BDAAA73E33182026]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>houses_sold</remote-name>
            <remote-type>5</remote-type>
            <local-name>[houses_sold]</local-name>
            <parent-name>[processed_dataframe_CRIME.csv]</parent-name>
            <remote-alias>houses_sold</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[processed_dataframe_CRIME.csv_7492CB1203C843C8BDAAA73E33182026]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>no_of_crimes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[no_of_crimes]</local-name>
            <parent-name>[processed_dataframe_CRIME.csv]</parent-name>
            <remote-alias>no_of_crimes</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[processed_dataframe_CRIME.csv_7492CB1203C843C8BDAAA73E33182026]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='processed_dataframe_CRIME.csv' datatype='table' name='[__tableau_internal_object_id__].[processed_dataframe_CRIME.csv_7492CB1203C843C8BDAAA73E33182026]' role='measure' type='quantitative' />
      <column caption='Area' datatype='string' name='[area]' role='dimension' type='nominal' />
      <column caption='Area Size' datatype='real' name='[area_size]' role='measure' type='quantitative' />
      <column caption='Average Price' datatype='real' name='[average_price]' role='measure' type='quantitative' />
      <column caption='Houses Sold' datatype='real' name='[houses_sold]' role='measure' type='quantitative' />
      <column caption='Life Satisfaction' datatype='real' name='[life_satisfaction]' role='measure' type='quantitative' />
      <column caption='Mean Salary' datatype='real' name='[mean_salary]' role='measure' type='quantitative' />
      <column caption='Median Salary' datatype='real' name='[median_salary]' role='measure' type='quantitative' />
      <column caption='No Of Crimes' datatype='real' name='[no_of_crimes]' role='measure' type='quantitative' />
      <column caption='No Of Houses' datatype='real' name='[no_of_houses]' role='measure' type='quantitative' />
      <column caption='Number Of Jobs' datatype='real' name='[number_of_jobs]' role='measure' type='quantitative' />
      <column caption='Population Size' datatype='real' name='[population_size]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[area]' derivation='None' name='[none:area:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:area:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;croydon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;sutton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;camden&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;newham&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;westminster&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;kensington and chelsea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;greenwich&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ealing&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;tower hamlets&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;bexley&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;redbridge&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;islington&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;barking and dagenham&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;lambeth&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;havering&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;brent&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;richmond upon thames&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;hackney&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;haringey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;hillingdon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;hounslow&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;hammersmith and fulham&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;waltham forest&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;kingston upon thames&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;bromley&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;southwark&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;city of london&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;lewisham&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;harrow&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;enfield&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;wandsworth&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;barnet&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;merton&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:area:nk]&#10;[none:Forecast Indicator:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;greenwich&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;kingston upon thames&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;tower hamlets&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;waltham forest&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;ealing&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;enfield&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;kensington and chelsea&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;bexley&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;haringey&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;merton&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;camden&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;hillingdon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;richmond upon thames&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;barnet&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;hammersmith and fulham&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;lewisham&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;westminster&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;barking and dagenham&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;hackney&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;lambeth&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;wandsworth&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;city of london&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;hounslow&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;southwark&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;croydon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;islington&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;sutton&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;bromley&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;havering&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;redbridge&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;brent&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;harrow&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;newham&quot;</bucket>
            </map-pri>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='processed_dataframe_CRIME.csv' id='processed_dataframe_CRIME.csv_7492CB1203C843C8BDAAA73E33182026'>
            <properties context=''>
              <relation connection='textscan.12q8s5b1meehjb1f5uk950d79b24' name='processed_dataframe_CRIME.csv' table='[processed_dataframe_CRIME#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='area' ordinal='0' />
                  <column datatype='integer' name='year' ordinal='1' />
                  <column datatype='real' name='median_salary' ordinal='2' />
                  <column datatype='real' name='life_satisfaction' ordinal='3' />
                  <column datatype='real' name='mean_salary' ordinal='4' />
                  <column datatype='real' name='population_size' ordinal='5' />
                  <column datatype='real' name='number_of_jobs' ordinal='6' />
                  <column datatype='real' name='area_size' ordinal='7' />
                  <column datatype='real' name='no_of_houses' ordinal='8' />
                  <column datatype='real' name='average_price' ordinal='9' />
                  <column datatype='real' name='houses_sold' ordinal='10' />
                  <column datatype='real' name='no_of_crimes' ordinal='11' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='processed_dataframe_HP' inline='true' name='federated.12nxbk81laeqhq10vrwhu0cnz797' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='processed_dataframe_HP' name='textscan.03cagdv12wf6gm1e61kht1us97ge'>
            <connection class='textscan' directory='C:/Users/Admin/OneDrive/Dissertation/Tocy_Works_Final/Tablaeu_Dataset_edited' filename='processed_dataframe_HP.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.03cagdv12wf6gm1e61kht1us97ge' name='processed_dataframe_HP.csv' table='[processed_dataframe_HP#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='area' ordinal='0' />
            <column datatype='integer' name='year' ordinal='1' />
            <column datatype='real' name='median_salary' ordinal='2' />
            <column datatype='real' name='life_satisfaction' ordinal='3' />
            <column datatype='real' name='mean_salary' ordinal='4' />
            <column datatype='real' name='population_size' ordinal='5' />
            <column datatype='real' name='number_of_jobs' ordinal='6' />
            <column datatype='real' name='area_size' ordinal='7' />
            <column datatype='real' name='no_of_houses' ordinal='8' />
            <column datatype='real' name='average_price' ordinal='9' />
            <column datatype='real' name='houses_sold' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.03cagdv12wf6gm1e61kht1us97ge' name='processed_dataframe_HP.csv' table='[processed_dataframe_HP#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='area' ordinal='0' />
            <column datatype='integer' name='year' ordinal='1' />
            <column datatype='real' name='median_salary' ordinal='2' />
            <column datatype='real' name='life_satisfaction' ordinal='3' />
            <column datatype='real' name='mean_salary' ordinal='4' />
            <column datatype='real' name='population_size' ordinal='5' />
            <column datatype='real' name='number_of_jobs' ordinal='6' />
            <column datatype='real' name='area_size' ordinal='7' />
            <column datatype='real' name='no_of_houses' ordinal='8' />
            <column datatype='real' name='average_price' ordinal='9' />
            <column datatype='real' name='houses_sold' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[processed_dataframe_HP.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>area</remote-name>
            <remote-type>129</remote-type>
            <local-name>[area]</local-name>
            <parent-name>[processed_dataframe_HP.csv]</parent-name>
            <remote-alias>area</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[processed_dataframe_HP.csv_1FE5E6AD9B6C4543BEADC5219C6BDE26]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[processed_dataframe_HP.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[processed_dataframe_HP.csv_1FE5E6AD9B6C4543BEADC5219C6BDE26]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_salary</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_salary]</local-name>
            <parent-name>[processed_dataframe_HP.csv]</parent-name>
            <remote-alias>median_salary</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[processed_dataframe_HP.csv_1FE5E6AD9B6C4543BEADC5219C6BDE26]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_satisfaction</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_satisfaction]</local-name>
            <parent-name>[processed_dataframe_HP.csv]</parent-name>
            <remote-alias>life_satisfaction</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[processed_dataframe_HP.csv_1FE5E6AD9B6C4543BEADC5219C6BDE26]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mean_salary</remote-name>
            <remote-type>5</remote-type>
            <local-name>[mean_salary]</local-name>
            <parent-name>[processed_dataframe_HP.csv]</parent-name>
            <remote-alias>mean_salary</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[processed_dataframe_HP.csv_1FE5E6AD9B6C4543BEADC5219C6BDE26]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_size</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_size]</local-name>
            <parent-name>[processed_dataframe_HP.csv]</parent-name>
            <remote-alias>population_size</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[processed_dataframe_HP.csv_1FE5E6AD9B6C4543BEADC5219C6BDE26]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number_of_jobs</remote-name>
            <remote-type>5</remote-type>
            <local-name>[number_of_jobs]</local-name>
            <parent-name>[processed_dataframe_HP.csv]</parent-name>
            <remote-alias>number_of_jobs</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[processed_dataframe_HP.csv_1FE5E6AD9B6C4543BEADC5219C6BDE26]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>area_size</remote-name>
            <remote-type>5</remote-type>
            <local-name>[area_size]</local-name>
            <parent-name>[processed_dataframe_HP.csv]</parent-name>
            <remote-alias>area_size</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[processed_dataframe_HP.csv_1FE5E6AD9B6C4543BEADC5219C6BDE26]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>no_of_houses</remote-name>
            <remote-type>5</remote-type>
            <local-name>[no_of_houses]</local-name>
            <parent-name>[processed_dataframe_HP.csv]</parent-name>
            <remote-alias>no_of_houses</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[processed_dataframe_HP.csv_1FE5E6AD9B6C4543BEADC5219C6BDE26]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>average_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[average_price]</local-name>
            <parent-name>[processed_dataframe_HP.csv]</parent-name>
            <remote-alias>average_price</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[processed_dataframe_HP.csv_1FE5E6AD9B6C4543BEADC5219C6BDE26]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>houses_sold</remote-name>
            <remote-type>5</remote-type>
            <local-name>[houses_sold]</local-name>
            <parent-name>[processed_dataframe_HP.csv]</parent-name>
            <remote-alias>houses_sold</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[processed_dataframe_HP.csv_1FE5E6AD9B6C4543BEADC5219C6BDE26]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='processed_dataframe_HP.csv' datatype='table' name='[__tableau_internal_object_id__].[processed_dataframe_HP.csv_1FE5E6AD9B6C4543BEADC5219C6BDE26]' role='measure' type='quantitative' />
      <column caption='Area' datatype='string' name='[area]' role='dimension' type='nominal' />
      <column caption='Area Size' datatype='real' name='[area_size]' role='measure' type='quantitative' />
      <column caption='Average Price' datatype='real' name='[average_price]' role='measure' type='quantitative' />
      <column caption='Houses Sold' datatype='real' name='[houses_sold]' role='measure' type='quantitative' />
      <column caption='Life Satisfaction' datatype='real' name='[life_satisfaction]' role='measure' type='quantitative' />
      <column caption='Mean Salary' datatype='real' name='[mean_salary]' role='measure' type='quantitative' />
      <column caption='Median Salary' datatype='real' name='[median_salary]' role='measure' type='quantitative' />
      <column caption='No Of Houses' datatype='real' name='[no_of_houses]' role='measure' type='quantitative' />
      <column caption='Number Of Jobs' datatype='real' name='[number_of_jobs]' role='measure' type='quantitative' />
      <column caption='Population Size' datatype='real' name='[population_size]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[area]' derivation='None' name='[none:area:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:area:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;ealing&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;sutton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;barking and dagenham&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;kingston upon thames&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;bromley&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;newham&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;hammersmith and fulham&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;westminster&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;enfield&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;tower hamlets&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;camden&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;redbridge&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;islington&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;barnet&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;lambeth&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;hillingdon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;city of london&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;richmond upon thames&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;haringey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;harrow&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;hounslow&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;kensington and chelsea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;greenwich&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;waltham forest&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;croydon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;southwark&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;bexley&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;lewisham&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;havering&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;hackney&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;wandsworth&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;brent&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;merton&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='processed_dataframe_HP.csv' id='processed_dataframe_HP.csv_1FE5E6AD9B6C4543BEADC5219C6BDE26'>
            <properties context=''>
              <relation connection='textscan.03cagdv12wf6gm1e61kht1us97ge' name='processed_dataframe_HP.csv' table='[processed_dataframe_HP#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='area' ordinal='0' />
                  <column datatype='integer' name='year' ordinal='1' />
                  <column datatype='real' name='median_salary' ordinal='2' />
                  <column datatype='real' name='life_satisfaction' ordinal='3' />
                  <column datatype='real' name='mean_salary' ordinal='4' />
                  <column datatype='real' name='population_size' ordinal='5' />
                  <column datatype='real' name='number_of_jobs' ordinal='6' />
                  <column datatype='real' name='area_size' ordinal='7' />
                  <column datatype='real' name='no_of_houses' ordinal='8' />
                  <column datatype='real' name='average_price' ordinal='9' />
                  <column datatype='real' name='houses_sold' ordinal='10' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='in (team22_dataset)' inline='true' name='federated.0lneaet1upr3pu1fpeqn215pg8xw' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='team22_dataset' name='excel-direct.019j71q1yu268g119y9cz1h9k3ru'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/IGP/AnalysisJupytor/team22_dataset.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.019j71q1yu268g119y9cz1h9k3ru' name='in' table='[in$]' type='table'>
          <columns gridOrigin='A1:AA245:no:A1:AA245:0' header='yes' outcome='6'>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='real' name='Co2' ordinal='2' />
            <column datatype='real' name='Co2_per_capita' ordinal='3' />
            <column datatype='integer' name='Gdp' ordinal='4' />
            <column datatype='real' name='Gdp_per_capita' ordinal='5' />
            <column datatype='integer' name='Coal_co2' ordinal='6' />
            <column datatype='integer' name='Cement_co2' ordinal='7' />
            <column datatype='integer' name='Flaring_co2' ordinal='8' />
            <column datatype='integer' name='Gas_co2' ordinal='9' />
            <column datatype='integer' name='Oil_co2' ordinal='10' />
            <column datatype='real' name='Coal_co2_per_capita' ordinal='11' />
            <column datatype='real' name='Cement_co2_per_capita' ordinal='12' />
            <column datatype='real' name='Flaring_co2_per_capita' ordinal='13' />
            <column datatype='real' name='Gas_co2_per_capita' ordinal='14' />
            <column datatype='real' name='Oil_co2_per_capita' ordinal='15' />
            <column datatype='integer' name='Cumulative_co2' ordinal='16' />
            <column datatype='integer' name='Cumulative_coal_co2' ordinal='17' />
            <column datatype='integer' name='Cumulative_cement_co2' ordinal='18' />
            <column datatype='integer' name='Cumulative_flaring_co2' ordinal='19' />
            <column datatype='integer' name='Cumulative_gas_co2' ordinal='20' />
            <column datatype='integer' name='Cumulative_oil_co2' ordinal='21' />
            <column datatype='integer' name='Annual_co2_fossil_cement' ordinal='22' />
            <column datatype='real' name='Co2_per_gdp' ordinal='23' />
            <column datatype='real' name='Consumption_co2_per_gdp' ordinal='24' />
            <column datatype='real' name='Consumption_co2' ordinal='25' />
            <column datatype='real' name='Consumption_co2_per_capita' ordinal='26' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.019j71q1yu268g119y9cz1h9k3ru' name='in' table='[in$]' type='table'>
          <columns gridOrigin='A1:AA245:no:A1:AA245:0' header='yes' outcome='6'>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='real' name='Co2' ordinal='2' />
            <column datatype='real' name='Co2_per_capita' ordinal='3' />
            <column datatype='integer' name='Gdp' ordinal='4' />
            <column datatype='real' name='Gdp_per_capita' ordinal='5' />
            <column datatype='integer' name='Coal_co2' ordinal='6' />
            <column datatype='integer' name='Cement_co2' ordinal='7' />
            <column datatype='integer' name='Flaring_co2' ordinal='8' />
            <column datatype='integer' name='Gas_co2' ordinal='9' />
            <column datatype='integer' name='Oil_co2' ordinal='10' />
            <column datatype='real' name='Coal_co2_per_capita' ordinal='11' />
            <column datatype='real' name='Cement_co2_per_capita' ordinal='12' />
            <column datatype='real' name='Flaring_co2_per_capita' ordinal='13' />
            <column datatype='real' name='Gas_co2_per_capita' ordinal='14' />
            <column datatype='real' name='Oil_co2_per_capita' ordinal='15' />
            <column datatype='integer' name='Cumulative_co2' ordinal='16' />
            <column datatype='integer' name='Cumulative_coal_co2' ordinal='17' />
            <column datatype='integer' name='Cumulative_cement_co2' ordinal='18' />
            <column datatype='integer' name='Cumulative_flaring_co2' ordinal='19' />
            <column datatype='integer' name='Cumulative_gas_co2' ordinal='20' />
            <column datatype='integer' name='Cumulative_oil_co2' ordinal='21' />
            <column datatype='integer' name='Annual_co2_fossil_cement' ordinal='22' />
            <column datatype='real' name='Co2_per_gdp' ordinal='23' />
            <column datatype='real' name='Consumption_co2_per_gdp' ordinal='24' />
            <column datatype='real' name='Consumption_co2' ordinal='25' />
            <column datatype='real' name='Consumption_co2_per_capita' ordinal='26' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[in]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AA245:no:A1:AA245:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[in]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[in_3CB7B280C2FA4D81ACCFFBFE18D43A1A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[in]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[in_3CB7B280C2FA4D81ACCFFBFE18D43A1A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Co2]</local-name>
            <parent-name>[in]</parent-name>
            <remote-alias>Co2</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[in_3CB7B280C2FA4D81ACCFFBFE18D43A1A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Co2_per_capita]</local-name>
            <parent-name>[in]</parent-name>
            <remote-alias>Co2_per_capita</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[in_3CB7B280C2FA4D81ACCFFBFE18D43A1A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gdp</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Gdp]</local-name>
            <parent-name>[in]</parent-name>
            <remote-alias>Gdp</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[in_3CB7B280C2FA4D81ACCFFBFE18D43A1A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Gdp_per_capita]</local-name>
            <parent-name>[in]</parent-name>
            <remote-alias>Gdp_per_capita</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[in_3CB7B280C2FA4D81ACCFFBFE18D43A1A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Coal_co2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Coal_co2]</local-name>
            <parent-name>[in]</parent-name>
            <remote-alias>Coal_co2</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[in_3CB7B280C2FA4D81ACCFFBFE18D43A1A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cement_co2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cement_co2]</local-name>
            <parent-name>[in]</parent-name>
            <remote-alias>Cement_co2</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[in_3CB7B280C2FA4D81ACCFFBFE18D43A1A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Flaring_co2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Flaring_co2]</local-name>
            <parent-name>[in]</parent-name>
            <remote-alias>Flaring_co2</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[in_3CB7B280C2FA4D81ACCFFBFE18D43A1A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gas_co2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Gas_co2]</local-name>
            <parent-name>[in]</parent-name>
            <remote-alias>Gas_co2</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[in_3CB7B280C2FA4D81ACCFFBFE18D43A1A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Oil_co2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Oil_co2]</local-name>
            <parent-name>[in]</parent-name>
            <remote-alias>Oil_co2</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[in_3CB7B280C2FA4D81ACCFFBFE18D43A1A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Coal_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Coal_co2_per_capita]</local-name>
            <parent-name>[in]</parent-name>
            <remote-alias>Coal_co2_per_capita</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[in_3CB7B280C2FA4D81ACCFFBFE18D43A1A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cement_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cement_co2_per_capita]</local-name>
            <parent-name>[in]</parent-name>
            <remote-alias>Cement_co2_per_capita</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[in_3CB7B280C2FA4D81ACCFFBFE18D43A1A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Flaring_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Flaring_co2_per_capita]</local-name>
            <parent-name>[in]</parent-name>
            <remote-alias>Flaring_co2_per_capita</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[in_3CB7B280C2FA4D81ACCFFBFE18D43A1A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gas_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Gas_co2_per_capita]</local-name>
            <parent-name>[in]</parent-name>
            <remote-alias>Gas_co2_per_capita</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[in_3CB7B280C2FA4D81ACCFFBFE18D43A1A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Oil_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Oil_co2_per_capita]</local-name>
            <parent-name>[in]</parent-name>
            <remote-alias>Oil_co2_per_capita</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[in_3CB7B280C2FA4D81ACCFFBFE18D43A1A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cumulative_co2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cumulative_co2]</local-name>
            <parent-name>[in]</parent-name>
            <remote-alias>Cumulative_co2</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[in_3CB7B280C2FA4D81ACCFFBFE18D43A1A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cumulative_coal_co2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cumulative_coal_co2]</local-name>
            <parent-name>[in]</parent-name>
            <remote-alias>Cumulative_coal_co2</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[in_3CB7B280C2FA4D81ACCFFBFE18D43A1A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cumulative_cement_co2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cumulative_cement_co2]</local-name>
            <parent-name>[in]</parent-name>
            <remote-alias>Cumulative_cement_co2</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[in_3CB7B280C2FA4D81ACCFFBFE18D43A1A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cumulative_flaring_co2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cumulative_flaring_co2]</local-name>
            <parent-name>[in]</parent-name>
            <remote-alias>Cumulative_flaring_co2</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[in_3CB7B280C2FA4D81ACCFFBFE18D43A1A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cumulative_gas_co2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cumulative_gas_co2]</local-name>
            <parent-name>[in]</parent-name>
            <remote-alias>Cumulative_gas_co2</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[in_3CB7B280C2FA4D81ACCFFBFE18D43A1A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cumulative_oil_co2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cumulative_oil_co2]</local-name>
            <parent-name>[in]</parent-name>
            <remote-alias>Cumulative_oil_co2</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[in_3CB7B280C2FA4D81ACCFFBFE18D43A1A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Annual_co2_fossil_cement</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Annual_co2_fossil_cement]</local-name>
            <parent-name>[in]</parent-name>
            <remote-alias>Annual_co2_fossil_cement</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[in_3CB7B280C2FA4D81ACCFFBFE18D43A1A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Co2_per_gdp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Co2_per_gdp]</local-name>
            <parent-name>[in]</parent-name>
            <remote-alias>Co2_per_gdp</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[in_3CB7B280C2FA4D81ACCFFBFE18D43A1A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Consumption_co2_per_gdp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Consumption_co2_per_gdp]</local-name>
            <parent-name>[in]</parent-name>
            <remote-alias>Consumption_co2_per_gdp</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[in_3CB7B280C2FA4D81ACCFFBFE18D43A1A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Consumption_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Consumption_co2]</local-name>
            <parent-name>[in]</parent-name>
            <remote-alias>Consumption_co2</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[in_3CB7B280C2FA4D81ACCFFBFE18D43A1A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Consumption_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Consumption_co2_per_capita]</local-name>
            <parent-name>[in]</parent-name>
            <remote-alias>Consumption_co2_per_capita</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[in_3CB7B280C2FA4D81ACCFFBFE18D43A1A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Annual co2 fossil cement' datatype='integer' name='[Annual_co2_fossil_cement]' role='measure' type='quantitative' />
      <column caption='Average Co2' datatype='real' name='[Calculation_468655866578964480]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(SUM([Co2]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Dev Co2' datatype='real' name='[Calculation_468655866579349506]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_STDEVP(SUM([Co2]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Z-Test' datatype='real' name='[Calculation_468655866581716995]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Co2])-[Calculation_468655866578964480])/[Calculation_468655866579349506]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Average GDP per capita' datatype='real' name='[Calculation_468655866586726405]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(SUM([Gdp_per_capita]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='DEV of GDP per capita' datatype='real' name='[Calculation_468655866586841094]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_STDEVP(SUM([Gdp_per_capita]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Z-Test GDP per capita' datatype='real' name='[Calculation_468655866587115527]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Gdp_per_capita])-[Calculation_468655866586726405])/[Calculation_468655866586841094]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='CO2 Emission - Based on Oil,Coal and Gas' datatype='real' name='[Calculation_927178596994048000]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#13;&#10;x &lt;- .arg1;&#13;&#10;y &lt;- .arg2;&#13;&#10;z &lt;- .arg3;&#13;&#10;a &lt;- .arg4;&#13;&#10;&#13;&#10;linreg &lt;- lm(x ~ y + z + a)&#13;&#10;linreg$fitted&#13;&#10;&#13;&#10;&quot;,SUM([Co2]),SUM([Gas_co2]),SUM([Coal_co2]),SUM([Oil_co2]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Cement co2' datatype='integer' name='[Cement_co2]' role='measure' type='quantitative' />
      <column caption='Cement co2 per capita' datatype='real' name='[Cement_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Co2 per capita' datatype='real' name='[Co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Co2 per gdp' datatype='real' name='[Co2_per_gdp]' role='measure' type='quantitative' />
      <column caption='Coal co2' datatype='integer' name='[Coal_co2]' role='measure' type='quantitative' />
      <column caption='Coal co2 per capita' datatype='real' name='[Coal_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Consumption co2' datatype='real' name='[Consumption_co2]' role='measure' type='quantitative' />
      <column caption='Consumption co2 per capita' datatype='real' name='[Consumption_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Consumption co2 per gdp' datatype='real' name='[Consumption_co2_per_gdp]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Cumulative cement co2' datatype='integer' name='[Cumulative_cement_co2]' role='measure' type='quantitative' />
      <column caption='Cumulative co2' datatype='integer' name='[Cumulative_co2]' role='measure' type='quantitative' />
      <column caption='Cumulative coal co2' datatype='integer' name='[Cumulative_coal_co2]' role='measure' type='quantitative' />
      <column caption='Cumulative flaring co2' datatype='integer' name='[Cumulative_flaring_co2]' role='measure' type='quantitative' />
      <column caption='Cumulative gas co2' datatype='integer' name='[Cumulative_gas_co2]' role='measure' type='quantitative' />
      <column caption='Cumulative oil co2' datatype='integer' name='[Cumulative_oil_co2]' role='measure' type='quantitative' />
      <column caption='Flaring co2' datatype='integer' name='[Flaring_co2]' role='measure' type='quantitative' />
      <column caption='Flaring co2 per capita' datatype='real' name='[Flaring_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Gas co2' datatype='integer' name='[Gas_co2]' role='measure' type='quantitative' />
      <column caption='Gas co2 per capita' datatype='real' name='[Gas_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Gdp per capita' datatype='real' name='[Gdp_per_capita]' role='measure' type='quantitative' />
      <column caption='Oil co2' datatype='integer' name='[Oil_co2]' role='measure' type='quantitative' />
      <column caption='Oil co2 per capita' datatype='real' name='[Oil_co2_per_capita]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='in' datatype='table' name='[__tableau_internal_object_id__].[in_3CB7B280C2FA4D81ACCFFBFE18D43A1A]' role='measure' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_468655866581716995]' derivation='User' name='[usr:Calculation_468655866581716995:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[Country]' ordering-type='Field' />
        <table-calc field='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[Calculation_468655866578964480]' ordering-field='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[Country]' ordering-type='Field' />
        <table-calc field='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[Calculation_468655866579349506]' ordering-field='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[Country]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_468655866581716995]' derivation='User' name='[usr:Calculation_468655866581716995:qk:7]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Field'>
          <order field='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]' />
          <order field='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Year:qk]' />
        </table-calc>
        <table-calc field='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[Calculation_468655866578964480]' ordering-type='Field'>
          <order field='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]' />
          <order field='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Year:qk]' />
        </table-calc>
        <table-calc field='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[Calculation_468655866579349506]' ordering-type='Field'>
          <order field='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]' />
          <order field='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Year:qk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_468655866587115527]' derivation='User' name='[usr:Calculation_468655866587115527:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[Country]' ordering-type='Field' />
        <table-calc field='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[Calculation_468655866586841094]' ordering-field='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[Country]' ordering-type='Field' />
        <table-calc field='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[Calculation_468655866586726405]' ordering-field='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[Country]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_468655866587115527]' derivation='User' name='[usr:Calculation_468655866587115527:qk:5]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Field'>
          <order field='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]' />
          <order field='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Year:qk]' />
        </table-calc>
        <table-calc field='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[Calculation_468655866586726405]' ordering-type='Field'>
          <order field='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]' />
          <order field='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Year:qk]' />
        </table-calc>
        <table-calc field='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[Calculation_468655866586841094]' ordering-type='Field'>
          <order field='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]' />
          <order field='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Year:qk]' />
        </table-calc>
      </column-instance>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0lneaet1upr3pu1fpeqn215pg8xw].[usr:Calculation_468655866587115527:qk:2]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0lneaet1upr3pu1fpeqn215pg8xw].[usr:Calculation_468655866581716995:qk:7]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0lneaet1upr3pu1fpeqn215pg8xw].[usr:Calculation_468655866581716995:qk:4]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0lneaet1upr3pu1fpeqn215pg8xw].[usr:Calculation_468655866587115527:qk:5]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='in' id='in_3CB7B280C2FA4D81ACCFFBFE18D43A1A'>
            <properties context=''>
              <relation connection='excel-direct.019j71q1yu268g119y9cz1h9k3ru' name='in' table='[in$]' type='table'>
                <columns gridOrigin='A1:AA245:no:A1:AA245:0' header='yes' outcome='6'>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='integer' name='Year' ordinal='1' />
                  <column datatype='real' name='Co2' ordinal='2' />
                  <column datatype='real' name='Co2_per_capita' ordinal='3' />
                  <column datatype='integer' name='Gdp' ordinal='4' />
                  <column datatype='real' name='Gdp_per_capita' ordinal='5' />
                  <column datatype='integer' name='Coal_co2' ordinal='6' />
                  <column datatype='integer' name='Cement_co2' ordinal='7' />
                  <column datatype='integer' name='Flaring_co2' ordinal='8' />
                  <column datatype='integer' name='Gas_co2' ordinal='9' />
                  <column datatype='integer' name='Oil_co2' ordinal='10' />
                  <column datatype='real' name='Coal_co2_per_capita' ordinal='11' />
                  <column datatype='real' name='Cement_co2_per_capita' ordinal='12' />
                  <column datatype='real' name='Flaring_co2_per_capita' ordinal='13' />
                  <column datatype='real' name='Gas_co2_per_capita' ordinal='14' />
                  <column datatype='real' name='Oil_co2_per_capita' ordinal='15' />
                  <column datatype='integer' name='Cumulative_co2' ordinal='16' />
                  <column datatype='integer' name='Cumulative_coal_co2' ordinal='17' />
                  <column datatype='integer' name='Cumulative_cement_co2' ordinal='18' />
                  <column datatype='integer' name='Cumulative_flaring_co2' ordinal='19' />
                  <column datatype='integer' name='Cumulative_gas_co2' ordinal='20' />
                  <column datatype='integer' name='Cumulative_oil_co2' ordinal='21' />
                  <column datatype='integer' name='Annual_co2_fossil_cement' ordinal='22' />
                  <column datatype='real' name='Co2_per_gdp' ordinal='23' />
                  <column datatype='real' name='Consumption_co2_per_gdp' ordinal='24' />
                  <column datatype='real' name='Consumption_co2' ordinal='25' />
                  <column datatype='real' name='Consumption_co2_per_capita' ordinal='26' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_E6B08E028C7C4747944AA2CF88ED805A]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Sheet 26' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Area,Forecast Indicator' />
        <param name='target' value='Sheet 26' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Anomaly -1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>Anomaly Identification - Country: Russia      Year : 1990</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='in (team22_dataset)' name='federated.0lneaet1upr3pu1fpeqn215pg8xw' />
          </datasources>
          <datasource-dependencies datasource='federated.0lneaet1upr3pu1fpeqn215pg8xw'>
            <column datatype='real' name='[Co2]' role='measure' type='quantitative' />
            <column caption='Coal co2' datatype='integer' name='[Coal_co2]' role='measure' type='quantitative' />
            <column caption='Consumption co2' datatype='real' name='[Consumption_co2]' role='measure' type='quantitative' />
            <column caption='Consumption co2 per capita' datatype='real' name='[Consumption_co2_per_capita]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gas co2' datatype='integer' name='[Gas_co2]' role='measure' type='quantitative' />
            <column caption='Gdp per capita' datatype='real' name='[Gdp_per_capita]' role='measure' type='quantitative' />
            <column caption='Oil co2' datatype='integer' name='[Oil_co2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Co2]' derivation='Sum' name='[sum:Co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Coal_co2]' derivation='Sum' name='[sum:Coal_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Consumption_co2]' derivation='Sum' name='[sum:Consumption_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Consumption_co2_per_capita]' derivation='Sum' name='[sum:Consumption_co2_per_capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gas_co2]' derivation='Sum' name='[sum:Gas_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gdp_per_capita]' derivation='Sum' name='[sum:Gdp_per_capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Oil_co2]' derivation='Sum' name='[sum:Oil_co2:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;Russia&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Year:qk]' included-values='in-range'>
            <min>1990</min>
            <max>2020</max>
          </filter>
          <slices>
            <column>[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]</column>
            <column>[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Year:qk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' value='true' />
            <format attr='break-on-special' value='true' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]' />
              <text column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]' />
              <text column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Coal_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]' />
              <text column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Consumption_co2_per_capita:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]' />
              <text column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Gas_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]' />
              <text column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Oil_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]' />
              <text column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Consumption_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]' />
              <text column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Gdp_per_capita:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]' />
              <text column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Co2:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]' />
              <text column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Co2:qk] + ([federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Coal_co2:qk] + ([federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Consumption_co2_per_capita:qk] + ([federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Gas_co2:qk] + ([federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Oil_co2:qk] + ([federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Consumption_co2:qk] + ([federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Gdp_per_capita:qk] + [federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Co2:qk])))))))</rows>
        <cols>([federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk] * [federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Year:qk])</cols>
      </table>
      <simple-id uuid='{DBD758CE-5228-4BC6-A060-B4373DA3CD90}' />
    </worksheet>
    <worksheet name='Anomaly-2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>Anomaly Identification - Country: United States      Year : 2018</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='in (team22_dataset)' name='federated.0lneaet1upr3pu1fpeqn215pg8xw' />
          </datasources>
          <datasource-dependencies datasource='federated.0lneaet1upr3pu1fpeqn215pg8xw'>
            <column datatype='real' name='[Co2]' role='measure' type='quantitative' />
            <column caption='Coal co2' datatype='integer' name='[Coal_co2]' role='measure' type='quantitative' />
            <column caption='Consumption co2' datatype='real' name='[Consumption_co2]' role='measure' type='quantitative' />
            <column caption='Consumption co2 per capita' datatype='real' name='[Consumption_co2_per_capita]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gas co2' datatype='integer' name='[Gas_co2]' role='measure' type='quantitative' />
            <column caption='Gas co2 per capita' datatype='real' name='[Gas_co2_per_capita]' role='measure' type='quantitative' />
            <column caption='Oil co2' datatype='integer' name='[Oil_co2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Co2]' derivation='Sum' name='[sum:Co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Coal_co2]' derivation='Sum' name='[sum:Coal_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Consumption_co2]' derivation='Sum' name='[sum:Consumption_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Consumption_co2_per_capita]' derivation='Sum' name='[sum:Consumption_co2_per_capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gas_co2]' derivation='Sum' name='[sum:Gas_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gas_co2_per_capita]' derivation='Sum' name='[sum:Gas_co2_per_capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Oil_co2]' derivation='Sum' name='[sum:Oil_co2:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Year:qk]' included-values='in-range'>
            <min>1960</min>
            <max>2020</max>
          </filter>
          <slices>
            <column>[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]</column>
            <column>[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Year:qk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height' field='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]' value='10' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' value='true' />
            <format attr='break-on-special' value='true' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]' />
              <text column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]' />
              <text column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Consumption_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]' />
              <text column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Oil_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]' />
              <text column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Consumption_co2_per_capita:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]' />
              <text column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Coal_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]' />
              <text column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Gas_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]' />
              <text column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Gas_co2_per_capita:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]' />
              <text column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Co2:qk] + ([federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Consumption_co2:qk] + ([federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Oil_co2:qk] + ([federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Consumption_co2_per_capita:qk] + ([federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Coal_co2:qk] + ([federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Gas_co2:qk] + [federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Gas_co2_per_capita:qk]))))))</rows>
        <cols>([federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk] * [federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Year:qk])</cols>
      </table>
      <simple-id uuid='{BAC63B0A-DB92-4B7A-8504-8DA7CFD618C6}' />
    </worksheet>
    <worksheet name='Correlation-Co2 &amp; GDP Per capita-Forcasting'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='in (team22_dataset)' name='federated.0lneaet1upr3pu1fpeqn215pg8xw' />
          </datasources>
          <datasource-dependencies datasource='federated.0lneaet1upr3pu1fpeqn215pg8xw'>
            <column datatype='real' name='[Co2]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gdp per capita' datatype='real' name='[Gdp_per_capita]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='Attribute' name='[attr:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Co2]' derivation='Sum' forecast-column-base='[sum:Co2:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gdp_per_capita]' derivation='Sum' forecast-column-base='[sum:Gdp_per_capita:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Gdp_per_capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Co2]' derivation='Sum' name='[sum:Co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gdp_per_capita]' derivation='Sum' name='[sum:Gdp_per_capita:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' value='true' />
            <format attr='break-on-special' value='true' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]' />
              <lod column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Year:qk]' />
              <color column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Forecast Indicator:nk]' />
              <tooltip column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[attr:Year:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0lneaet1upr3pu1fpeqn215pg8xw].[fVal:sum:Co2:qk]</rows>
        <cols>[federated.0lneaet1upr3pu1fpeqn215pg8xw].[fVal:sum:Gdp_per_capita:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{03BB7082-11F8-4360-A86F-184BA5A545C3}' />
    </worksheet>
    <worksheet name='Correlation-Co2&amp; GDP per capita'>
      <table>
        <view>
          <datasources>
            <datasource caption='in (team22_dataset)' name='federated.0lneaet1upr3pu1fpeqn215pg8xw' />
          </datasources>
          <datasource-dependencies datasource='federated.0lneaet1upr3pu1fpeqn215pg8xw'>
            <column datatype='real' name='[Co2]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gdp per capita' datatype='real' name='[Gdp_per_capita]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Co2]' derivation='Sum' name='[sum:Co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gdp_per_capita]' derivation='Sum' name='[sum:Gdp_per_capita:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' value='true' />
            <format attr='break-on-special' value='true' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]' />
              <lod column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Year:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Co2:qk]</rows>
        <cols>[federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Gdp_per_capita:qk]</cols>
      </table>
      <simple-id uuid='{99B4E4E6-B00D-4E0B-921A-267F82897A92}' />
    </worksheet>
    <worksheet name='Correlation-Co2_Final'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>Correlation : Co2 and 3 Independent variables</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='in (team22_dataset)' name='federated.0lneaet1upr3pu1fpeqn215pg8xw' />
          </datasources>
          <datasource-dependencies datasource='federated.0lneaet1upr3pu1fpeqn215pg8xw'>
            <column datatype='real' name='[Co2]' role='measure' type='quantitative' />
            <column caption='Coal co2' datatype='integer' name='[Coal_co2]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gas co2' datatype='integer' name='[Gas_co2]' role='measure' type='quantitative' />
            <column caption='Oil co2' datatype='integer' name='[Oil_co2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Co2]' derivation='Sum' name='[sum:Co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Coal_co2]' derivation='Sum' name='[sum:Coal_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gas_co2]' derivation='Sum' name='[sum:Gas_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Oil_co2]' derivation='Sum' name='[sum:Oil_co2:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' value='true' />
            <format attr='break-on-special' value='true' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]' />
              <lod column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Year:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]' />
              <lod column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Year:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Coal_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]' />
              <lod column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Year:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Gas_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]' />
              <lod column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Year:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Oil_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]' />
              <lod column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Year:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>([federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Co2:qk] + ([federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Coal_co2:qk] + ([federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Gas_co2:qk] + [federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Oil_co2:qk])))</rows>
        <cols>([federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Co2:qk] + ([federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Coal_co2:qk] + ([federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Gas_co2:qk] + [federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Oil_co2:qk])))</cols>
      </table>
      <simple-id uuid='{9FE08913-6292-427B-9681-026D347450B4}' />
    </worksheet>
    <worksheet name='Correlation-Gdp'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Correlation: 
GDP per capita &amp; 2 Independent variables</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='in (team22_dataset)' name='federated.0lneaet1upr3pu1fpeqn215pg8xw' />
          </datasources>
          <datasource-dependencies datasource='federated.0lneaet1upr3pu1fpeqn215pg8xw'>
            <column caption='Consumption co2' datatype='real' name='[Consumption_co2]' role='measure' type='quantitative' />
            <column caption='Consumption co2 per capita' datatype='real' name='[Consumption_co2_per_capita]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gdp per capita' datatype='real' name='[Gdp_per_capita]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Consumption_co2]' derivation='Sum' name='[sum:Consumption_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Consumption_co2_per_capita]' derivation='Sum' name='[sum:Consumption_co2_per_capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gdp_per_capita]' derivation='Sum' name='[sum:Gdp_per_capita:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Gdp_per_capita:qk]' field-type='quantitative' max='114138.29291684901' min='-7716.5869683252467' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Consumption_co2:qk]' field-type='quantitative' max='7175854537.7150259' min='-3678823251.5750198' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' value='true' />
            <format attr='break-on-special' value='true' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]' />
              <lod column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Gdp_per_capita:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]' />
              <lod column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Consumption_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]' />
              <lod column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Consumption_co2_per_capita:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]' />
              <lod column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Gdp_per_capita:qk] + ([federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Consumption_co2:qk] + [federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Consumption_co2_per_capita:qk]))</rows>
        <cols>([federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Gdp_per_capita:qk] + ([federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Consumption_co2:qk] + [federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Consumption_co2_per_capita:qk]))</cols>
      </table>
      <simple-id uuid='{62A4C087-C008-4D9B-B1A1-EEAC6464D617}' />
    </worksheet>
    <worksheet name='Dis-Expensive-Boroughs'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='processed_dataframe_CRIME' name='federated.13655hh0c8dej418pt7g4122sbxf' />
          </datasources>
          <datasource-dependencies datasource='federated.13655hh0c8dej418pt7g4122sbxf'>
            <column caption='Area' datatype='string' name='[area]' role='dimension' type='nominal' />
            <column caption='Average Price' datatype='real' name='[average_price]' role='measure' type='quantitative' />
            <column caption='Houses Sold' datatype='real' name='[houses_sold]' role='measure' type='quantitative' />
            <column caption='No Of Crimes' datatype='real' name='[no_of_crimes]' role='measure' type='quantitative' />
            <column-instance column='[area]' derivation='None' name='[none:area:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[average_price]' derivation='Sum' name='[sum:average_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[houses_sold]' derivation='Sum' name='[sum:houses_sold:qk]' pivot='key' type='quantitative' />
            <column-instance column='[no_of_crimes]' derivation='Sum' name='[sum:no_of_crimes:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13655hh0c8dej418pt7g4122sbxf].[none:area:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:area:nk]' member='&quot;camden&quot;' />
              <groupfilter function='member' level='[none:area:nk]' member='&quot;city of london&quot;' />
              <groupfilter function='member' level='[none:area:nk]' member='&quot;hammersmith and fulham&quot;' />
              <groupfilter function='member' level='[none:area:nk]' member='&quot;kensington and chelsea&quot;' />
              <groupfilter function='member' level='[none:area:nk]' member='&quot;westminster&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.13655hh0c8dej418pt7g4122sbxf].[none:year:qk]' included-values='in-range'>
            <min>2015</min>
            <max>2019</max>
          </filter>
          <slices>
            <column>[federated.13655hh0c8dej418pt7g4122sbxf].[none:area:nk]</column>
            <column>[federated.13655hh0c8dej418pt7g4122sbxf].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' value='true' />
            <format attr='break-on-special' value='true' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.13655hh0c8dej418pt7g4122sbxf].[none:area:nk]' />
              <text column='[federated.13655hh0c8dej418pt7g4122sbxf].[none:year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.13655hh0c8dej418pt7g4122sbxf].[sum:houses_sold:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.13655hh0c8dej418pt7g4122sbxf].[none:area:nk]' />
              <text column='[federated.13655hh0c8dej418pt7g4122sbxf].[none:year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.13655hh0c8dej418pt7g4122sbxf].[sum:average_price:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.13655hh0c8dej418pt7g4122sbxf].[none:area:nk]' />
              <text column='[federated.13655hh0c8dej418pt7g4122sbxf].[none:year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.13655hh0c8dej418pt7g4122sbxf].[sum:no_of_crimes:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.13655hh0c8dej418pt7g4122sbxf].[none:area:nk]' />
              <text column='[federated.13655hh0c8dej418pt7g4122sbxf].[none:year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.13655hh0c8dej418pt7g4122sbxf].[sum:houses_sold:qk] + ([federated.13655hh0c8dej418pt7g4122sbxf].[sum:average_price:qk] + [federated.13655hh0c8dej418pt7g4122sbxf].[sum:no_of_crimes:qk]))</rows>
        <cols>([federated.13655hh0c8dej418pt7g4122sbxf].[none:area:nk] * [federated.13655hh0c8dej418pt7g4122sbxf].[none:year:qk])</cols>
      </table>
      <simple-id uuid='{E60FA5AF-0C64-4280-A1BA-38BDE2158C88}' />
    </worksheet>
    <worksheet name='Dis-correlation_House_price_house_sold'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Correlation - Average price and Number of houses sold in London Boroughs</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='processed_dataframe_HP' name='federated.12nxbk81laeqhq10vrwhu0cnz797' />
          </datasources>
          <datasource-dependencies datasource='federated.12nxbk81laeqhq10vrwhu0cnz797'>
            <column caption='Area' datatype='string' name='[area]' role='dimension' type='nominal' />
            <column caption='Average Price' datatype='real' name='[average_price]' role='measure' type='quantitative' />
            <column caption='Houses Sold' datatype='real' name='[houses_sold]' role='measure' type='quantitative' />
            <column-instance column='[area]' derivation='None' name='[none:area:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[average_price]' derivation='Sum' name='[sum:average_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[houses_sold]' derivation='Sum' name='[sum:houses_sold:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.12nxbk81laeqhq10vrwhu0cnz797].[none:area:nk]' />
              <text column='[federated.12nxbk81laeqhq10vrwhu0cnz797].[none:year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12nxbk81laeqhq10vrwhu0cnz797].[sum:average_price:qk]</rows>
        <cols>[federated.12nxbk81laeqhq10vrwhu0cnz797].[sum:houses_sold:qk]</cols>
      </table>
      <simple-id uuid='{7438E3A7-2D51-4BD7-B9E7-DD6B3AFD2F1E}' />
    </worksheet>
    <worksheet name='Dis_Ev_HP_cheap_bor'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Evolution of house prices in the most cheapest London boroughs</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='processed_dataframe_HP' name='federated.12nxbk81laeqhq10vrwhu0cnz797' />
          </datasources>
          <datasource-dependencies datasource='federated.12nxbk81laeqhq10vrwhu0cnz797'>
            <column caption='Area' datatype='string' name='[area]' role='dimension' type='nominal' />
            <column caption='Average Price' datatype='real' name='[average_price]' role='measure' type='quantitative' />
            <column-instance column='[area]' derivation='None' name='[none:area:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[average_price]' derivation='Sum' name='[sum:average_price:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12nxbk81laeqhq10vrwhu0cnz797].[none:area:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:area:nk]' member='&quot;barking and dagenham&quot;' />
              <groupfilter function='member' level='[none:area:nk]' member='&quot;barnet&quot;' />
              <groupfilter function='member' level='[none:area:nk]' member='&quot;bexley&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.12nxbk81laeqhq10vrwhu0cnz797].[none:area:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12nxbk81laeqhq10vrwhu0cnz797].[none:area:nk]' />
              <text column='[federated.12nxbk81laeqhq10vrwhu0cnz797].[none:year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12nxbk81laeqhq10vrwhu0cnz797].[sum:average_price:qk]</rows>
        <cols>[federated.12nxbk81laeqhq10vrwhu0cnz797].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{1DFEBF66-5E59-409B-9FFC-FC00198184FE}' />
    </worksheet>
    <worksheet name='Dis_Ev_HP_expensive_bor'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Evolution of house prices in the most expensive London boroughs</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='processed_dataframe_HP' name='federated.12nxbk81laeqhq10vrwhu0cnz797' />
          </datasources>
          <datasource-dependencies datasource='federated.12nxbk81laeqhq10vrwhu0cnz797'>
            <column caption='Area' datatype='string' name='[area]' role='dimension' type='nominal' />
            <column caption='Average Price' datatype='real' name='[average_price]' role='measure' type='quantitative' />
            <column-instance column='[area]' derivation='None' name='[none:area:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[average_price]' derivation='Sum' name='[sum:average_price:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12nxbk81laeqhq10vrwhu0cnz797].[none:area:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:area:nk]' member='&quot;camden&quot;' />
              <groupfilter function='member' level='[none:area:nk]' member='&quot;city of london&quot;' />
              <groupfilter function='member' level='[none:area:nk]' member='&quot;hammersmith and fulham&quot;' />
              <groupfilter function='member' level='[none:area:nk]' member='&quot;haringey&quot;' />
              <groupfilter function='member' level='[none:area:nk]' member='&quot;islington&quot;' />
              <groupfilter function='member' level='[none:area:nk]' member='&quot;kensington and chelsea&quot;' />
              <groupfilter function='member' level='[none:area:nk]' member='&quot;wandsworth&quot;' />
              <groupfilter function='member' level='[none:area:nk]' member='&quot;westminster&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.12nxbk81laeqhq10vrwhu0cnz797].[none:area:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.12nxbk81laeqhq10vrwhu0cnz797].[none:area:nk]' />
              <text column='[federated.12nxbk81laeqhq10vrwhu0cnz797].[none:year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12nxbk81laeqhq10vrwhu0cnz797].[sum:average_price:qk]</rows>
        <cols>[federated.12nxbk81laeqhq10vrwhu0cnz797].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{3E608385-4280-487F-B01A-C31FAB2C5935}' />
    </worksheet>
    <worksheet name='Dis_Price_Area_Size'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Correlation: House Price and Borough Size</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='processed_dataframe_HP' name='federated.12nxbk81laeqhq10vrwhu0cnz797' />
          </datasources>
          <datasource-dependencies datasource='federated.12nxbk81laeqhq10vrwhu0cnz797'>
            <column caption='Area' datatype='string' name='[area]' role='dimension' type='nominal' />
            <column caption='Area Size' datatype='real' name='[area_size]' role='measure' type='quantitative' />
            <column caption='Average Price' datatype='real' name='[average_price]' role='measure' type='quantitative' />
            <column-instance column='[area]' derivation='None' name='[none:area:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[area_size]' derivation='Sum' name='[sum:area_size:qk]' pivot='key' type='quantitative' />
            <column-instance column='[average_price]' derivation='Sum' name='[sum:average_price:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' value='true' />
            <format attr='break-on-special' value='true' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.12nxbk81laeqhq10vrwhu0cnz797].[none:area:nk]' />
              <text column='[federated.12nxbk81laeqhq10vrwhu0cnz797].[none:year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12nxbk81laeqhq10vrwhu0cnz797].[sum:average_price:qk]</rows>
        <cols>[federated.12nxbk81laeqhq10vrwhu0cnz797].[sum:area_size:qk]</cols>
      </table>
      <simple-id uuid='{430CDDED-D005-40E8-9DC5-54A1AB327698}' />
    </worksheet>
    <worksheet name='Dis_Price_Crime'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Correlation: House Price and Crimes in London Borough</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='processed_dataframe_HP' name='federated.12nxbk81laeqhq10vrwhu0cnz797' />
            <datasource caption='processed_dataframe_CRIME' name='federated.13655hh0c8dej418pt7g4122sbxf' />
          </datasources>
          <datasource-dependencies datasource='federated.12nxbk81laeqhq10vrwhu0cnz797'>
            <column caption='Area' datatype='string' name='[area]' role='dimension' type='nominal' />
            <column caption='Average Price' datatype='real' name='[average_price]' role='measure' type='quantitative' />
            <column-instance column='[area]' derivation='None' name='[none:area:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[average_price]' derivation='Sum' name='[sum:average_price:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.13655hh0c8dej418pt7g4122sbxf'>
            <column caption='No Of Crimes' datatype='real' name='[no_of_crimes]' role='measure' type='quantitative' />
            <column-instance column='[no_of_crimes]' derivation='Sum' name='[sum:no_of_crimes:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' value='true' />
            <format attr='break-on-special' value='true' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.12nxbk81laeqhq10vrwhu0cnz797].[none:area:nk]' />
              <text column='[federated.12nxbk81laeqhq10vrwhu0cnz797].[none:year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12nxbk81laeqhq10vrwhu0cnz797].[sum:average_price:qk]</rows>
        <cols>[federated.13655hh0c8dej418pt7g4122sbxf].[sum:no_of_crimes:qk]</cols>
      </table>
      <simple-id uuid='{E7F9C422-D54B-458B-8F48-23BC5396CFAF}' />
    </worksheet>
    <worksheet name='Dis_Price_Jobs'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Correlation - House price and Job opportunities</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='processed_dataframe_HP' name='federated.12nxbk81laeqhq10vrwhu0cnz797' />
          </datasources>
          <datasource-dependencies datasource='federated.12nxbk81laeqhq10vrwhu0cnz797'>
            <column caption='Area' datatype='string' name='[area]' role='dimension' type='nominal' />
            <column caption='Average Price' datatype='real' name='[average_price]' role='measure' type='quantitative' />
            <column-instance column='[area]' derivation='None' name='[none:area:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Number Of Jobs' datatype='real' name='[number_of_jobs]' role='measure' type='quantitative' />
            <column-instance column='[average_price]' derivation='Sum' name='[sum:average_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[number_of_jobs]' derivation='Sum' name='[sum:number_of_jobs:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' value='true' />
            <format attr='break-on-special' value='true' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.12nxbk81laeqhq10vrwhu0cnz797].[none:area:nk]' />
              <text column='[federated.12nxbk81laeqhq10vrwhu0cnz797].[none:year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12nxbk81laeqhq10vrwhu0cnz797].[sum:average_price:qk]</rows>
        <cols>[federated.12nxbk81laeqhq10vrwhu0cnz797].[sum:number_of_jobs:qk]</cols>
      </table>
      <simple-id uuid='{CA545A1E-C5ED-45A9-BB41-F0F6C2252655}' />
    </worksheet>
    <worksheet name='Dis_Price_Life_Satisfaction'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Correlation: House Price and Life satisfaction</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='processed_dataframe_HP' name='federated.12nxbk81laeqhq10vrwhu0cnz797' />
          </datasources>
          <datasource-dependencies datasource='federated.12nxbk81laeqhq10vrwhu0cnz797'>
            <column caption='Area' datatype='string' name='[area]' role='dimension' type='nominal' />
            <column caption='Average Price' datatype='real' name='[average_price]' role='measure' type='quantitative' />
            <column caption='Life Satisfaction' datatype='real' name='[life_satisfaction]' role='measure' type='quantitative' />
            <column-instance column='[area]' derivation='None' name='[none:area:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[average_price]' derivation='Sum' name='[sum:average_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[life_satisfaction]' derivation='Sum' name='[sum:life_satisfaction:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' value='true' />
            <format attr='break-on-special' value='true' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.12nxbk81laeqhq10vrwhu0cnz797].[none:area:nk]' />
              <text column='[federated.12nxbk81laeqhq10vrwhu0cnz797].[none:year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12nxbk81laeqhq10vrwhu0cnz797].[sum:average_price:qk]</rows>
        <cols>[federated.12nxbk81laeqhq10vrwhu0cnz797].[sum:life_satisfaction:qk]</cols>
      </table>
      <simple-id uuid='{22728D14-455C-480A-B219-7CD8BDBAD3C2}' />
    </worksheet>
    <worksheet name='Dis_Price_Mean_Salary'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Correlation: House price and Mean Salary of London Bororughs</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='processed_dataframe_HP' name='federated.12nxbk81laeqhq10vrwhu0cnz797' />
          </datasources>
          <datasource-dependencies datasource='federated.12nxbk81laeqhq10vrwhu0cnz797'>
            <column caption='Area' datatype='string' name='[area]' role='dimension' type='nominal' />
            <column caption='Average Price' datatype='real' name='[average_price]' role='measure' type='quantitative' />
            <column caption='Mean Salary' datatype='real' name='[mean_salary]' role='measure' type='quantitative' />
            <column-instance column='[area]' derivation='None' name='[none:area:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[average_price]' derivation='Sum' name='[sum:average_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[mean_salary]' derivation='Sum' name='[sum:mean_salary:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' value='true' />
            <format attr='break-on-special' value='true' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.12nxbk81laeqhq10vrwhu0cnz797].[none:area:nk]' />
              <text column='[federated.12nxbk81laeqhq10vrwhu0cnz797].[none:year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12nxbk81laeqhq10vrwhu0cnz797].[sum:average_price:qk]</rows>
        <cols>[federated.12nxbk81laeqhq10vrwhu0cnz797].[sum:mean_salary:qk]</cols>
      </table>
      <simple-id uuid='{219DD789-FE44-42E8-957C-F89BBA9AAF02}' />
    </worksheet>
    <worksheet name='Dis_Price_Median_Salary'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Correlation - Average price and Median Salary in London Boroughs</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='processed_dataframe_HP' name='federated.12nxbk81laeqhq10vrwhu0cnz797' />
          </datasources>
          <datasource-dependencies datasource='federated.12nxbk81laeqhq10vrwhu0cnz797'>
            <column caption='Area' datatype='string' name='[area]' role='dimension' type='nominal' />
            <column caption='Average Price' datatype='real' name='[average_price]' role='measure' type='quantitative' />
            <column caption='Median Salary' datatype='real' name='[median_salary]' role='measure' type='quantitative' />
            <column-instance column='[area]' derivation='None' name='[none:area:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[average_price]' derivation='Sum' name='[sum:average_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[median_salary]' derivation='Sum' name='[sum:median_salary:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' value='true' />
            <format attr='break-on-special' value='true' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.12nxbk81laeqhq10vrwhu0cnz797].[none:area:nk]' />
              <text column='[federated.12nxbk81laeqhq10vrwhu0cnz797].[none:year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12nxbk81laeqhq10vrwhu0cnz797].[sum:average_price:qk]</rows>
        <cols>[federated.12nxbk81laeqhq10vrwhu0cnz797].[sum:median_salary:qk]</cols>
      </table>
      <simple-id uuid='{39646CFA-4F96-4F29-A36F-8AC90D6F5406}' />
    </worksheet>
    <worksheet name='Dis_Price_Number_of_Houses'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Correlation: House Price and Number of Houses</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='processed_dataframe_HP' name='federated.12nxbk81laeqhq10vrwhu0cnz797' />
          </datasources>
          <datasource-dependencies datasource='federated.12nxbk81laeqhq10vrwhu0cnz797'>
            <column caption='Area' datatype='string' name='[area]' role='dimension' type='nominal' />
            <column caption='Average Price' datatype='real' name='[average_price]' role='measure' type='quantitative' />
            <column caption='No Of Houses' datatype='real' name='[no_of_houses]' role='measure' type='quantitative' />
            <column-instance column='[area]' derivation='None' name='[none:area:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[average_price]' derivation='Sum' name='[sum:average_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[no_of_houses]' derivation='Sum' name='[sum:no_of_houses:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' value='true' />
            <format attr='break-on-special' value='true' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.12nxbk81laeqhq10vrwhu0cnz797].[none:area:nk]' />
              <text column='[federated.12nxbk81laeqhq10vrwhu0cnz797].[none:year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12nxbk81laeqhq10vrwhu0cnz797].[sum:average_price:qk]</rows>
        <cols>[federated.12nxbk81laeqhq10vrwhu0cnz797].[sum:no_of_houses:qk]</cols>
      </table>
      <simple-id uuid='{5C5D2609-2438-4966-9984-4385A77D1199}' />
    </worksheet>
    <worksheet name='Dis_Price_Population'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Correlation: House Price and Population</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='processed_dataframe_HP' name='federated.12nxbk81laeqhq10vrwhu0cnz797' />
          </datasources>
          <datasource-dependencies datasource='federated.12nxbk81laeqhq10vrwhu0cnz797'>
            <column caption='Area' datatype='string' name='[area]' role='dimension' type='nominal' />
            <column caption='Average Price' datatype='real' name='[average_price]' role='measure' type='quantitative' />
            <column-instance column='[area]' derivation='None' name='[none:area:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Population Size' datatype='real' name='[population_size]' role='measure' type='quantitative' />
            <column-instance column='[average_price]' derivation='Sum' name='[sum:average_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population_size]' derivation='Sum' name='[sum:population_size:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' value='true' />
            <format attr='break-on-special' value='true' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.12nxbk81laeqhq10vrwhu0cnz797].[none:area:nk]' />
              <text column='[federated.12nxbk81laeqhq10vrwhu0cnz797].[none:year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12nxbk81laeqhq10vrwhu0cnz797].[sum:average_price:qk]</rows>
        <cols>[federated.12nxbk81laeqhq10vrwhu0cnz797].[sum:population_size:qk]</cols>
      </table>
      <simple-id uuid='{D6160797-9486-48C4-BCDB-4C5CF4117F0A}' />
    </worksheet>
    <worksheet name='Dis_Relationship'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Relationship between Variables</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='processed_dataframe_HP' name='federated.12nxbk81laeqhq10vrwhu0cnz797' />
            <datasource caption='processed_dataframe_CRIME' name='federated.13655hh0c8dej418pt7g4122sbxf' />
          </datasources>
          <datasource-dependencies datasource='federated.12nxbk81laeqhq10vrwhu0cnz797'>
            <column caption='Area' datatype='string' name='[area]' role='dimension' type='nominal' />
            <column caption='Area Size' datatype='real' name='[area_size]' role='measure' type='quantitative' />
            <column caption='Average Price' datatype='real' name='[average_price]' role='measure' type='quantitative' />
            <column caption='Houses Sold' datatype='real' name='[houses_sold]' role='measure' type='quantitative' />
            <column caption='Life Satisfaction' datatype='real' name='[life_satisfaction]' role='measure' type='quantitative' />
            <column caption='Mean Salary' datatype='real' name='[mean_salary]' role='measure' type='quantitative' />
            <column caption='Median Salary' datatype='real' name='[median_salary]' role='measure' type='quantitative' />
            <column caption='No Of Houses' datatype='real' name='[no_of_houses]' role='measure' type='quantitative' />
            <column-instance column='[area]' derivation='None' name='[none:area:nk]' pivot='key' type='nominal' />
            <column caption='Number Of Jobs' datatype='real' name='[number_of_jobs]' role='measure' type='quantitative' />
            <column caption='Population Size' datatype='real' name='[population_size]' role='measure' type='quantitative' />
            <column-instance column='[area_size]' derivation='Sum' name='[sum:area_size:qk]' pivot='key' type='quantitative' />
            <column-instance column='[average_price]' derivation='Sum' name='[sum:average_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[houses_sold]' derivation='Sum' name='[sum:houses_sold:qk]' pivot='key' type='quantitative' />
            <column-instance column='[life_satisfaction]' derivation='Sum' name='[sum:life_satisfaction:qk]' pivot='key' type='quantitative' />
            <column-instance column='[mean_salary]' derivation='Sum' name='[sum:mean_salary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[median_salary]' derivation='Sum' name='[sum:median_salary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[no_of_houses]' derivation='Sum' name='[sum:no_of_houses:qk]' pivot='key' type='quantitative' />
            <column-instance column='[number_of_jobs]' derivation='Sum' name='[sum:number_of_jobs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population_size]' derivation='Sum' name='[sum:population_size:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.13655hh0c8dej418pt7g4122sbxf'>
            <column caption='No Of Crimes' datatype='real' name='[no_of_crimes]' role='measure' type='quantitative' />
            <column-instance column='[no_of_crimes]' derivation='Sum' name='[sum:no_of_crimes:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' value='true' />
            <format attr='break-on-special' value='true' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.12nxbk81laeqhq10vrwhu0cnz797].[none:area:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.12nxbk81laeqhq10vrwhu0cnz797].[sum:area_size:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.12nxbk81laeqhq10vrwhu0cnz797].[none:area:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.12nxbk81laeqhq10vrwhu0cnz797].[sum:average_price:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.12nxbk81laeqhq10vrwhu0cnz797].[none:area:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.12nxbk81laeqhq10vrwhu0cnz797].[sum:houses_sold:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.12nxbk81laeqhq10vrwhu0cnz797].[none:area:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.12nxbk81laeqhq10vrwhu0cnz797].[sum:life_satisfaction:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.12nxbk81laeqhq10vrwhu0cnz797].[none:area:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.12nxbk81laeqhq10vrwhu0cnz797].[sum:mean_salary:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.12nxbk81laeqhq10vrwhu0cnz797].[none:area:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.12nxbk81laeqhq10vrwhu0cnz797].[sum:median_salary:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.12nxbk81laeqhq10vrwhu0cnz797].[none:area:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.12nxbk81laeqhq10vrwhu0cnz797].[sum:no_of_houses:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.12nxbk81laeqhq10vrwhu0cnz797].[none:area:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.12nxbk81laeqhq10vrwhu0cnz797].[sum:number_of_jobs:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.12nxbk81laeqhq10vrwhu0cnz797].[none:area:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.12nxbk81laeqhq10vrwhu0cnz797].[sum:population_size:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.12nxbk81laeqhq10vrwhu0cnz797].[none:area:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='10' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.13655hh0c8dej418pt7g4122sbxf].[sum:no_of_crimes:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.12nxbk81laeqhq10vrwhu0cnz797].[none:area:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>([federated.13655hh0c8dej418pt7g4122sbxf].[sum:no_of_crimes:qk] + ([federated.12nxbk81laeqhq10vrwhu0cnz797].[sum:area_size:qk] + ([federated.12nxbk81laeqhq10vrwhu0cnz797].[sum:average_price:qk] + ([federated.12nxbk81laeqhq10vrwhu0cnz797].[sum:houses_sold:qk] + ([federated.12nxbk81laeqhq10vrwhu0cnz797].[sum:life_satisfaction:qk] + ([federated.12nxbk81laeqhq10vrwhu0cnz797].[sum:mean_salary:qk] + ([federated.12nxbk81laeqhq10vrwhu0cnz797].[sum:median_salary:qk] + ([federated.12nxbk81laeqhq10vrwhu0cnz797].[sum:no_of_houses:qk] + ([federated.12nxbk81laeqhq10vrwhu0cnz797].[sum:number_of_jobs:qk] + [federated.12nxbk81laeqhq10vrwhu0cnz797].[sum:population_size:qk])))))))))</rows>
        <cols>([federated.13655hh0c8dej418pt7g4122sbxf].[sum:no_of_crimes:qk] + ([federated.12nxbk81laeqhq10vrwhu0cnz797].[sum:area_size:qk] + ([federated.12nxbk81laeqhq10vrwhu0cnz797].[sum:average_price:qk] + ([federated.12nxbk81laeqhq10vrwhu0cnz797].[sum:houses_sold:qk] + ([federated.12nxbk81laeqhq10vrwhu0cnz797].[sum:life_satisfaction:qk] + ([federated.12nxbk81laeqhq10vrwhu0cnz797].[sum:mean_salary:qk] + ([federated.12nxbk81laeqhq10vrwhu0cnz797].[sum:median_salary:qk] + ([federated.12nxbk81laeqhq10vrwhu0cnz797].[sum:no_of_houses:qk] + ([federated.12nxbk81laeqhq10vrwhu0cnz797].[sum:number_of_jobs:qk] + [federated.12nxbk81laeqhq10vrwhu0cnz797].[sum:population_size:qk])))))))))</cols>
      </table>
      <simple-id uuid='{7D2B65BE-E606-4E73-A502-1CEA819FD71F}' />
    </worksheet>
    <worksheet name='Dis_cheapest_boroughs'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>House price prediction - Cheapest boroughs</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='processed_dataframe_CRIME' name='federated.13655hh0c8dej418pt7g4122sbxf' />
          </datasources>
          <datasource-dependencies datasource='federated.13655hh0c8dej418pt7g4122sbxf'>
            <column caption='Area' datatype='string' name='[area]' role='dimension' type='nominal' />
            <column caption='Average Price' datatype='real' name='[average_price]' role='measure' type='quantitative' />
            <column-instance column='[average_price]' derivation='Sum' forecast-column-base='[sum:average_price:qk]' forecast-column-type='forecast-value' name='[fVal:sum:average_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[area]' derivation='None' name='[none:area:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[average_price]' derivation='Sum' name='[sum:average_price:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13655hh0c8dej418pt7g4122sbxf].[none:area:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:area:nk]' member='&quot;barking and dagenham&quot;' />
              <groupfilter function='member' level='[none:area:nk]' member='&quot;barnet&quot;' />
              <groupfilter function='member' level='[none:area:nk]' member='&quot;bexley&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.13655hh0c8dej418pt7g4122sbxf].[none:area:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.13655hh0c8dej418pt7g4122sbxf].[none:area:nk]' />
              <text column='[federated.13655hh0c8dej418pt7g4122sbxf].[none:year:qk]' />
              <color column='[federated.13655hh0c8dej418pt7g4122sbxf].[none:Forecast Indicator:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13655hh0c8dej418pt7g4122sbxf].[fVal:sum:average_price:qk]</rows>
        <cols>([federated.13655hh0c8dej418pt7g4122sbxf].[none:area:nk] * [federated.13655hh0c8dej418pt7g4122sbxf].[none:year:qk])</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{D47EB5B7-673E-4A4A-A542-6D3596C23E5E}' />
    </worksheet>
    <worksheet name='Dis_expensive boroughs'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>House price prediction - Most expensive boroughs</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='processed_dataframe_CRIME' name='federated.13655hh0c8dej418pt7g4122sbxf' />
          </datasources>
          <datasource-dependencies datasource='federated.13655hh0c8dej418pt7g4122sbxf'>
            <column caption='Area' datatype='string' name='[area]' role='dimension' type='nominal' />
            <column caption='Average Price' datatype='real' name='[average_price]' role='measure' type='quantitative' />
            <column-instance column='[average_price]' derivation='Sum' forecast-column-base='[sum:average_price:qk]' forecast-column-type='forecast-value' name='[fVal:sum:average_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[area]' derivation='None' name='[none:area:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[average_price]' derivation='Sum' name='[sum:average_price:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13655hh0c8dej418pt7g4122sbxf].[none:area:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:area:nk]' member='&quot;camden&quot;' />
              <groupfilter function='member' level='[none:area:nk]' member='&quot;city of london&quot;' />
              <groupfilter function='member' level='[none:area:nk]' member='&quot;hammersmith and fulham&quot;' />
              <groupfilter function='member' level='[none:area:nk]' member='&quot;kensington and chelsea&quot;' />
              <groupfilter function='member' level='[none:area:nk]' member='&quot;westminster&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.13655hh0c8dej418pt7g4122sbxf].[none:area:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.13655hh0c8dej418pt7g4122sbxf].[none:area:nk]' />
              <text column='[federated.13655hh0c8dej418pt7g4122sbxf].[none:area:nk]' />
              <text column='[federated.13655hh0c8dej418pt7g4122sbxf].[none:year:qk]' />
              <color column='[federated.13655hh0c8dej418pt7g4122sbxf].[none:Forecast Indicator:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13655hh0c8dej418pt7g4122sbxf].[fVal:sum:average_price:qk]</rows>
        <cols>([federated.13655hh0c8dej418pt7g4122sbxf].[none:area:nk] * [federated.13655hh0c8dej418pt7g4122sbxf].[none:year:qk])</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{DCD9C1F1-7BCD-45D7-A402-C79A45600F19}' />
    </worksheet>
    <worksheet name='Regression_Co2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Regression Analysis - Co2 Emission</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='in (team22_dataset)' name='federated.0lneaet1upr3pu1fpeqn215pg8xw' />
          </datasources>
          <datasource-dependencies datasource='federated.0lneaet1upr3pu1fpeqn215pg8xw'>
            <column datatype='real' name='[Co2]' role='measure' type='quantitative' />
            <column caption='Coal co2' datatype='integer' name='[Coal_co2]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gas co2' datatype='integer' name='[Gas_co2]' role='measure' type='quantitative' />
            <column caption='Oil co2' datatype='integer' name='[Oil_co2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Co2]' derivation='Sum' name='[sum:Co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Coal_co2]' derivation='Sum' name='[sum:Coal_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gas_co2]' derivation='Sum' name='[sum:Gas_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Oil_co2]' derivation='Sum' name='[sum:Oil_co2:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' value='true' />
            <format attr='break-on-special' value='true' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]' />
              <lod column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Year:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Coal_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]' />
              <lod column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Year:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Oil_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]' />
              <lod column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Year:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Gas_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]' />
              <lod column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Year:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Co2:qk]</rows>
        <cols>([federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Coal_co2:qk] + ([federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Oil_co2:qk] + [federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Gas_co2:qk]))</cols>
      </table>
      <simple-id uuid='{CC7789DA-C31C-4437-BADE-09A22B2A10E5}' />
    </worksheet>
    <worksheet name='Regression_Gdp_Per_Capita'>
      <layout-options>
        <title>
          <formatted-text>
            <run>RegressionAnalysis - GDP Per Capita</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='in (team22_dataset)' name='federated.0lneaet1upr3pu1fpeqn215pg8xw' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0lneaet1upr3pu1fpeqn215pg8xw'>
            <column caption='Consumption co2' datatype='real' name='[Consumption_co2]' role='measure' type='quantitative' />
            <column caption='Consumption co2 per capita' datatype='real' name='[Consumption_co2_per_capita]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gdp per capita' datatype='real' name='[Gdp_per_capita]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Consumption_co2]' derivation='Sum' name='[sum:Consumption_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Consumption_co2_per_capita]' derivation='Sum' name='[sum:Consumption_co2_per_capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gdp_per_capita]' derivation='Sum' name='[sum:Gdp_per_capita:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Consumption_co2:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Consumption_co2:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]' />
              <lod column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Year:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Consumption_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]' />
              <lod column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Year:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Consumption_co2_per_capita:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]' />
              <lod column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Year:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Gdp_per_capita:qk]</rows>
        <cols>([federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Consumption_co2:qk] + [federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Consumption_co2_per_capita:qk])</cols>
      </table>
      <simple-id uuid='{FC247259-B1D5-4A86-8391-B2D97A54941A}' />
    </worksheet>
    <worksheet name='Sheet 10'>
      <table>
        <view>
          <datasources>
            <datasource caption='in (team22_dataset)' name='federated.0lneaet1upr3pu1fpeqn215pg8xw' />
          </datasources>
          <datasource-dependencies datasource='federated.0lneaet1upr3pu1fpeqn215pg8xw'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gdp per capita' datatype='real' name='[Gdp_per_capita]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gdp_per_capita]' derivation='Sum' name='[sum:Gdp_per_capita:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Gdp_per_capita:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Year:qk]</rows>
        <cols>[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{C6C3DC1D-1818-4123-BBBA-1FE80F5A8EF8}' />
    </worksheet>
    <worksheet name='Sheet 26'>
      <table>
        <view>
          <datasources>
            <datasource caption='processed_dataframe_CRIME' name='federated.13655hh0c8dej418pt7g4122sbxf' />
          </datasources>
          <datasource-dependencies datasource='federated.13655hh0c8dej418pt7g4122sbxf'>
            <column caption='Area' datatype='string' name='[area]' role='dimension' type='nominal' />
            <column caption='Average Price' datatype='real' name='[average_price]' role='measure' type='quantitative' />
            <column-instance column='[average_price]' derivation='Sum' forecast-column-base='[sum:average_price:qk]' forecast-column-type='forecast-value' name='[fVal:sum:average_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[area]' derivation='None' name='[none:area:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[average_price]' derivation='Sum' name='[sum:average_price:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13655hh0c8dej418pt7g4122sbxf].[none:area:nk]'>
            <groupfilter function='member' level='[none:area:nk]' member='&quot;kingston upon thames&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.13655hh0c8dej418pt7g4122sbxf].[none:area:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.13655hh0c8dej418pt7g4122sbxf].[none:area:nk]' />
              <text column='[federated.13655hh0c8dej418pt7g4122sbxf].[none:year:qk]' />
              <color column='[federated.13655hh0c8dej418pt7g4122sbxf].[none:Forecast Indicator:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13655hh0c8dej418pt7g4122sbxf].[fVal:sum:average_price:qk]</rows>
        <cols>[federated.13655hh0c8dej418pt7g4122sbxf].[none:year:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-zero' ignore-last='1' model-type='custom' range-type='auto' season-type='ets-none' show-prediction-bands='false' trend-type='ets-none' />
      </table>
      <simple-id uuid='{CADDB9A6-A3DD-4D7D-A35F-A6E53D1B1637}' />
    </worksheet>
    <worksheet name='Sheet 27'>
      <table>
        <view>
          <datasources>
            <datasource caption='processed_dataframe_CRIME' name='federated.13655hh0c8dej418pt7g4122sbxf' />
          </datasources>
          <datasource-dependencies datasource='federated.13655hh0c8dej418pt7g4122sbxf'>
            <column caption='Area' datatype='string' name='[area]' role='dimension' type='nominal' />
            <column caption='Average Price' datatype='real' name='[average_price]' role='measure' type='quantitative' />
            <column-instance column='[average_price]' derivation='Sum' forecast-column-base='[sum:average_price:qk]' forecast-column-type='forecast-value' name='[fVal:sum:average_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[area]' derivation='None' name='[none:area:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[average_price]' derivation='Sum' name='[sum:average_price:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.13655hh0c8dej418pt7g4122sbxf].[none:area:nk]' />
              <text column='[federated.13655hh0c8dej418pt7g4122sbxf].[none:year:qk]' />
              <color column='[federated.13655hh0c8dej418pt7g4122sbxf].[none:Forecast Indicator:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13655hh0c8dej418pt7g4122sbxf].[fVal:sum:average_price:qk]</rows>
        <cols>([federated.13655hh0c8dej418pt7g4122sbxf].[none:area:nk] * [federated.13655hh0c8dej418pt7g4122sbxf].[none:year:qk])</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{E58EB532-A937-4C0D-8C67-77B5EE661F5B}' />
    </worksheet>
    <worksheet name='Sheet 9'>
      <table>
        <view>
          <datasources>
            <datasource caption='in (team22_dataset)' name='federated.0lneaet1upr3pu1fpeqn215pg8xw' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0lneaet1upr3pu1fpeqn215pg8xw'>
            <column datatype='real' name='[Co2]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Co2]' derivation='Sum' name='[sum:Co2:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Co2:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Year:qk]</rows>
        <cols>[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{6A109343-3ABB-48B8-8D07-64F1DC300170}' />
    </worksheet>
    <worksheet name='Z-test-Co2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Hypothesis Analysis of Co2 Emission over 4 countries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='in (team22_dataset)' name='federated.0lneaet1upr3pu1fpeqn215pg8xw' />
          </datasources>
          <datasource-dependencies datasource='federated.0lneaet1upr3pu1fpeqn215pg8xw'>
            <column caption='Average Co2' datatype='real' name='[Calculation_468655866578964480]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([Co2]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Dev Co2' datatype='real' name='[Calculation_468655866579349506]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_STDEVP(SUM([Co2]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Z-Test' datatype='real' name='[Calculation_468655866581716995]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Co2])-[Calculation_468655866578964480])/[Calculation_468655866579349506]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' name='[Co2]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_468655866581716995]' derivation='User' name='[usr:Calculation_468655866581716995:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[Country]' ordering-type='Field' />
              <table-calc field='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[Calculation_468655866578964480]' ordering-field='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[Country]' ordering-type='Field' />
              <table-calc field='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[Calculation_468655866579349506]' ordering-field='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[Country]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_468655866581716995]' derivation='User' name='[usr:Calculation_468655866581716995:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
              <table-calc field='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[Calculation_468655866578964480]' ordering-type='Columns' />
              <table-calc field='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[Calculation_468655866579349506]' ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' value='true' />
            <format attr='break-on-special' value='true' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[usr:Calculation_468655866581716995:qk:5]' />
              <text column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[usr:Calculation_468655866581716995:qk:4]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]</rows>
        <cols>[federated.0lneaet1upr3pu1fpeqn215pg8xw].[usr:Calculation_468655866581716995:qk:4]</cols>
      </table>
      <simple-id uuid='{792167DA-21BE-49E6-A759-E57262E81F47}' />
    </worksheet>
    <worksheet name='Z-test-GDP'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Hypothesis Analysis of Gdp per capita over 4 countries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='in (team22_dataset)' name='federated.0lneaet1upr3pu1fpeqn215pg8xw' />
          </datasources>
          <datasource-dependencies datasource='federated.0lneaet1upr3pu1fpeqn215pg8xw'>
            <column caption='Average GDP per capita' datatype='real' name='[Calculation_468655866586726405]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([Gdp_per_capita]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='DEV of GDP per capita' datatype='real' name='[Calculation_468655866586841094]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_STDEVP(SUM([Gdp_per_capita]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Z-Test GDP per capita' datatype='real' name='[Calculation_468655866587115527]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Gdp_per_capita])-[Calculation_468655866586726405])/[Calculation_468655866586841094]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gdp per capita' datatype='real' name='[Gdp_per_capita]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_468655866587115527]' derivation='User' name='[usr:Calculation_468655866587115527:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[Country]' ordering-type='Field' />
              <table-calc field='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[Calculation_468655866586841094]' ordering-field='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[Country]' ordering-type='Field' />
              <table-calc field='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[Calculation_468655866586726405]' ordering-field='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[Country]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_468655866587115527]' derivation='User' name='[usr:Calculation_468655866587115527:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
              <table-calc field='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[Calculation_468655866586726405]' ordering-type='Columns' />
              <table-calc field='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[Calculation_468655866586841094]' ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' value='true' />
            <format attr='break-on-special' value='true' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[usr:Calculation_468655866587115527:qk:3]' />
              <text column='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[usr:Calculation_468655866587115527:qk:3]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]</rows>
        <cols>[federated.0lneaet1upr3pu1fpeqn215pg8xw].[usr:Calculation_468655866587115527:qk:2]</cols>
      </table>
      <simple-id uuid='{CC9FDBEC-CFF3-4E35-B693-5B3D39BC8C88}' />
    </worksheet>
  </worksheets>
  <windows source-height='72'>
    <window class='worksheet' name='Regression_Gdp_Per_Capita'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{784C337F-AD86-4921-8E76-6038761B36F7}' />
    </window>
    <window class='worksheet' name='Correlation-Gdp'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1B2BB0C9-2828-447B-8890-8EA3125EA889}' />
    </window>
    <window class='worksheet' name='Regression_Co2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{E3CC4222-0574-4FDE-AF9D-2D30C5A99EF2}' />
    </window>
    <window class='worksheet' name='Correlation-Co2_Final'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{8FCD69DC-6905-44EC-ABE4-D39807B1D74E}' />
    </window>
    <window class='worksheet' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Co2:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D08672DC-B053-4027-BEEB-4F3DB078A828}' />
    </window>
    <window class='worksheet' name='Sheet 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[sum:Gdp_per_capita:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{83CA9202-58B6-4295-A3C9-6F59E812214D}' />
    </window>
    <window class='worksheet' name='Anomaly -1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{0BD0FE81-20F2-489E-A23F-94AE425B1827}' />
    </window>
    <window class='worksheet' name='Anomaly-2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{2849A201-C855-46C9-8899-6211CC3D5AAB}' />
    </window>
    <window class='worksheet' name='Correlation-Co2 &amp; GDP Per capita-Forcasting'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='6' param='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]&#10;[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{06B22428-773A-4843-B8D3-3E75AC4960DE}' />
    </window>
    <window class='worksheet' name='Correlation-Co2&amp; GDP per capita'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B6A5351E-AD86-4F0D-95AE-8B725E0179BB}' />
    </window>
    <window class='worksheet' name='Z-test-Co2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='258'>
            <card param='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[usr:Calculation_468655866581716995:qk:5]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B35E2912-07FD-4449-B259-21CF7C7719DA}' />
    </window>
    <window class='worksheet' name='Z-test-GDP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[none:Country:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.0lneaet1upr3pu1fpeqn215pg8xw].[usr:Calculation_468655866587115527:qk:3]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{72D0F28C-7A45-4A95-AB34-BCB7C69AA684}' />
    </window>
    <window class='worksheet' name='Dis-correlation_House_price_house_sold'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.12nxbk81laeqhq10vrwhu0cnz797].[none:area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{793CFB57-D5D5-4B6F-A951-04EDF27E4F7D}' />
    </window>
    <window class='worksheet' name='Dis_Price_Mean_Salary'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12nxbk81laeqhq10vrwhu0cnz797].[none:area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{E51F267D-86AE-4910-8362-9437C0E5196F}' />
    </window>
    <window class='worksheet' name='Dis_Price_Median_Salary'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12nxbk81laeqhq10vrwhu0cnz797].[none:area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{97F25F00-9E17-4091-89A6-8D9FF14058CC}' />
    </window>
    <window class='worksheet' name='Dis_Price_Life_Satisfaction'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12nxbk81laeqhq10vrwhu0cnz797].[none:area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{062BD6A9-C624-4189-A246-DA2EF4A94763}' />
    </window>
    <window class='worksheet' name='Dis_Price_Jobs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12nxbk81laeqhq10vrwhu0cnz797].[none:area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{E9C191F1-3062-4414-A8E4-981C1C37565C}' />
    </window>
    <window class='worksheet' name='Dis_Price_Population'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12nxbk81laeqhq10vrwhu0cnz797].[none:area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{DAC105D0-139A-4654-B07C-7AE00D51834D}' />
    </window>
    <window class='worksheet' name='Dis_Price_Area_Size'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.12nxbk81laeqhq10vrwhu0cnz797].[none:area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{C4268595-2101-4D58-8D48-12A7E53B49A1}' />
    </window>
    <window class='worksheet' name='Dis_Price_Number_of_Houses'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12nxbk81laeqhq10vrwhu0cnz797].[none:area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{BA5DFDF8-98C3-430B-B11A-B8FB49F5CC15}' />
    </window>
    <window class='worksheet' name='Dis_Price_Crime'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12nxbk81laeqhq10vrwhu0cnz797].[none:area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D2D009BB-2DB1-4545-B39B-3F308E65DB41}' />
    </window>
    <window class='worksheet' name='Dis_Relationship'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='123'>
            <card pane-specification-id='10' param='[federated.12nxbk81laeqhq10vrwhu0cnz797].[none:area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{E9EDD9C7-731E-49DC-BF13-A84A548679E9}' />
    </window>
    <window class='worksheet' name='Dis_Ev_HP_expensive_bor'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12nxbk81laeqhq10vrwhu0cnz797].[none:area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{428F01E3-3BB1-4C40-89BE-D37E023374D9}' />
    </window>
    <window class='worksheet' name='Dis_Ev_HP_cheap_bor'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12nxbk81laeqhq10vrwhu0cnz797].[none:area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{EFA8DD37-E0D2-41D7-B164-6F280DEBE9A5}' />
    </window>
    <window class='worksheet' name='Dis-Expensive-Boroughs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='5' param='[federated.13655hh0c8dej418pt7g4122sbxf].[none:area:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{8BE12F64-CB9F-4A0F-95BE-C3F5B39F0883}' />
    </window>
    <window class='worksheet' name='Sheet 26'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.13655hh0c8dej418pt7g4122sbxf].[none:area:nk]&#10;[federated.13655hh0c8dej418pt7g4122sbxf].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{79E8C6B4-F6F1-4BCC-90F6-1D7D996FC517}' />
    </window>
    <window class='worksheet' name='Sheet 27'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.13655hh0c8dej418pt7g4122sbxf].[none:area:nk]&#10;[federated.13655hh0c8dej418pt7g4122sbxf].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{7FC57B38-08A8-4837-AE0B-5FBF4F3D78FC}' />
    </window>
    <window class='worksheet' maximized='true' name='Dis_expensive boroughs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.13655hh0c8dej418pt7g4122sbxf].[none:area:nk]&#10;[federated.13655hh0c8dej418pt7g4122sbxf].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13655hh0c8dej418pt7g4122sbxf].[none:Forecast Indicator:nk]</field>
            <field>[federated.13655hh0c8dej418pt7g4122sbxf].[none:area:nk]</field>
            <field>[federated.13655hh0c8dej418pt7g4122sbxf].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B90F4048-6367-40A1-8828-6110D23EBFD4}' />
    </window>
    <window class='worksheet' name='Dis_cheapest_boroughs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.13655hh0c8dej418pt7g4122sbxf].[none:area:nk]&#10;[federated.13655hh0c8dej418pt7g4122sbxf].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13655hh0c8dej418pt7g4122sbxf].[none:Forecast Indicator:nk]</field>
            <field>[federated.13655hh0c8dej418pt7g4122sbxf].[none:area:nk]</field>
            <field>[federated.13655hh0c8dej418pt7g4122sbxf].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5B603294-9116-4E8D-810C-659A78E36F24}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Correlation-Co2&amp; GDP per capita' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Dis-Expensive-Boroughs' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dis_Ev_HP_cheap_bor' width='192'>
      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
      /n+uA0eBBvAyKAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dis_Ev_HP_expensive_bor' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Dis_Price_Number_of_Houses' width='192'>
      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
      VObea14GY0IAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dis_cheapest_boroughs' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dis_expensive boroughs' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 26' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 27' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29d3Qc153v+anO3ehGzjkHAiQIMImkKFFUTlSWJVu25aCxJ9ie592Zc968
      tzP2nD27c/x2Zsc7703wjMM4K9q0JIqURFISMwmCAZHIudFAo3Os6qraP0BSpASJFEGAIFGf
      c3BOd1Xdur/GrW/d9Lu/K6iqqqKhsUzRXW8DNDSuJ5oANJY1S0oAwWDwepugscxYUgKIRCLX
      2wSNZcaSEoCGxmKjCUBjWaMJQGNZowlAY1mjCUBjWaMJQGNZowlAY1mjCeAqEEURr9d7vc24
      Inw+H/F4/HqbcUW4XK5Fz1MTgMayRhOAxrJGE4DGsuaGEYB/ahhv7JPPS+FJJmZm27qxwAxh
      6erzkoJeJjyBq7+Bxg2D4XobcKXEg25OdYxRVlVLUbLCiZMd5FY1km9XmHBOYrQZEXV2Jp1e
      TEoUQW/FOTDIpDtM04Z1BMe6OTvmo6GxiQyHheHuVoZ9sLa5kZmRToYmwzQ0NSN7hzh9ppes
      +vXkp1/vX62x0NwwNQA6Iyua1uMf7SUixpAVhdaTJ/E5+/AImWQlCbTsf4+4IYmYZ5poLIQ7
      bqaxKpmRgTHGwiaaazKZmIoCCrGYSNg5Qu+Em8npIKurC5nyjtM/JrJ5fRNWo3C9f7HGInDj
      CECRGe7vJiQbCM1MYUjOwmbWY7DYKSnIQaczUL+qgemJMRLnVnk6UlIwmkwY9Abi/il6BkZR
      AJCYnomQlZUOikxScgpmoxG93kAi6qG7bwgxoa0UXQ7cME2g9MJaqpND2BypWPQyNn8Yc20l
      NpMOVQ96SyE11XoUKY5OAJ3RSEaygFGXSqlZxNnvZiAosb7SBphpWtdEXNaRZE9CUDIwGvQU
      OwQKHMmE4wqO5OTr/ZM1FgFhKS2Kd7lc5OTkXG8zLosoioTDYdLS0q63KZfF5/NhtVoxm83X
      25TLcj3K/8ZpAmloLAA3pgCkKDOBz7580jMzswDGXDlBjwdx6VS4n0os7CMckz/5AlVh0jW9
      eAZdhph/hnDis6e7YfoA55FiYbxTYzilFGw6iVAsQWpaGkhRfMEISclpGJQYgYhEaloK8VCQ
      iDh7zfjIEIoCyWlpiGEfMVlHWmoy0aCfWELFqAcMVlLs1gWx3etyopMTpCSlYDMoePyzfRqj
      TiUhxkBvQoqFkQUTack2fF4vBqudmeEeYqYUykpLMOsXxLSPEQ5M4Y5Eyc1JJdlmwu/zorfY
      MevAYDIgiglGRsfIyUrD6/VhsiVjFFRMZhOiKGIym1nMcbSIe4KpsEpBqoMkE0RjIoLRghwN
      IOss2C0GQpEwqmDCFB/h1JiNpvqCG00AMm0nT2Aw6hEdDsb72jjePkzdpm0orl4EHUjJxYT7
      jjMZkGi4dQsz3d3Y7HYyK2vwz0wixuIkFVcT7T9Gx2iILfdsZbD1DAargN6cTlxR2LpxzQKZ
      H8c1OclwYJDK0kz2HzyGNaeW0lSRiGQmI9mIcyaMEhEpKE+h5WgHgiWDynwrEUQKihZPAKqc
      YGbahXN4gKqqFPbvb0e2ZnDnmlIm3GHySsoAmOg7w8HWHgzJBdQUJ1NYVsbI0CQN9dWLY+g5
      FEXC7XIyMdBPc6GJg8MKTaV2Pjh8CsVgZX15IROCgC4UpSjXgN8bJRLPufEEIOscrKzKptMN
      vpjAhtUVTEbCmAzJrChLoWsmjiiksXVbLQarFX1hJSVZSbgFmfS8UirzMxmO+ojp8llVFiQc
      j5NdWEFGpoBen41ramjhzNdbqKqsZPBUK8NOL+s3rqe7ewrFkEzTyhV4J0awZ5cgjg/jDgWo
      XLWBHLsJ1CiqPQu7ceFM+yiC3khpZTnT3a0EQyFKV24gP9mE1Q7eXidltbOd6kAwRN2aTaRb
      jKSnKBw73EJJ8+ZFffsD6PQmymtqGG1rBZ2B2pX1JAfbyKxspCbXgc7jo2ZFDeLAWVJzksmV
      rWQ4LDdaH8BEWb6NYx2jZKYmk5eZjDtmoSw/B4fg4813j4E+mebGInp6R0BnJjc3HZPdTprd
      Tm5uLnqrg6yUfDKT40i2TPLSUsnNzcDhSCcpyUhubu6CWZ+Rk8rpQ0dIKa5jZUU+IyPTVNaU
      k5eXh14Ae2oadquZ1NxcamtWofrHcAXjZOVkM9F9Gt8iejUnJaUw2HkMW2kNVRWrMEfGmApE
      iUtGtm5dSzQQobiokJqGJiJTQ7jDEqo+CSw2StIXf8TJkpZBf8shsktqSMrIJytJh71kJQU6
      D2MuL/a8PBw6HanZuZjtuRj8PYzNhG6eYVDXaB+eiEBZeSkW48K2E7Rh0LnxT4+TsGSS4bi6
      vK7HMOglAggGg9c1OFUwGMThcFz4ft40Qbi6ClVRFHS6q6/kPim9LMuIoojVar3stfPNa77p
      o9EoJpMJvV5/2Wvnm9d803+0/Bcyr/Nc0gdwOBwfM2CxufgNIMsyqqpiMFxdV0WSJAwGw1UL
      SBRFTCbTnMc/WgOIoojRaLzmec03/Vw1wELldS3Sf7QGWGhbb7A+gIbGtUUTgMayRhOAxrJG
      E4DGskYTgMayRhOAxrJGE4DGskYTgMayRhOAxrJGE4DGskYTgMayRhOAxrJGE4DGskYTgMay
      RhOAxrJGE4DGskYTgMayRhOAxrJGE4DGskYTgMayRhOAxrJGE4DGskYTgMayRhOAxrJGE4DG
      suYaRIdO0H36FF7ZysbmeloOvE1ANFHR0EzC1UWv009lwzrMgUE6h6cpqm3GKPqpLCvgTOcA
      KxpWYNRpOzJqXB+ugQD01KxsorOnF5CRBRsrG+tJSzXTNpbEvdvqOdkxAQrcc/ftnD49QEIX
      p6u9g6ySegzCbPxGmI0Fev4zfHj84mOfhfP3u9pwhR+152K7zv8tdF4Laeu1zmu+6ec6vtC2
      XgMBCBfFghfIz81kfLCbidRcBEEPggCqiiDoEAQBARU1EccXlcg49+Y/HwT3o8aeP361/4Dz
      D+S1fihVVZ3T1qUogE+z9VrnNd/0N6gA4pw6fJTOkXFkwYA4M40vFCU/qwISo7z97giFNU2Y
      fDPsfnsfOeWrMIoCGxqKaW3rJnX1KsyG2cjFOp3ukkC48w2Oez7tfKJLz5W3oijo9fpLzp2/
      9lrnNd/0er3+E2291nnNN/1Hy38h8zrPNRCAicZNW2jcdP57xYenirOoO/+5JIvKCyfyEARY
      u6Zx/tlraMyDa9MEuso+7NWm09C4VmjDoBrLGk0AGssaTQAayxpNABrLGk0AGssaTQAayxpN
      ABrLGk0AGssaTQAayxpNABrLGk0AGssaTQAayxpNABrLGk0AGssaTQAayxpNABrLGk0AGssa
      TQAayxpNABrLGk0AGsuaK1oUHw/N0D8eIiXFTH5uLtpado2bhSsQgErrvp2cmHBQlaZgevpx
      shbeLg2NReGKmkBpmWl4nGdp80RJWWiLNDQWkStqAmUWr+Sb39pMxBfQmj8aNxVXVAN0HD6E
      ZEuh+9AhAgttkYbGInJZAUixOCvWr2Lnz/6VSG4FaYthlYbGInHZJtBEdw/OmAuj1UZwYoIw
      4FgEwzQ0FoPLCqBk9UpMgyk03XI35sWwSENjEbmiPoBn7Ay79hymp2cIaaEt0tBYRC4rgKjP
      xdB0BKMax+32Ii+GVRoai8RlBBBnxytvkJyZhscns35TE5bFsUtDY1G4jABCRCIGTGYLvsFu
      jhw7Q+xj1yi4xwdp7xkGVCb62/jg4DECsQSeiT72fXAIdyBGYGqY997fz6Q3gtM5iaokGBke
      JqGoC/PLNDSugMt0gpPZckcTATHBxm23APo5JsJUMNpBnoFEgBGPgebqXAbHxom5vWxsrqJ9
      cAyibm5Z10D72REsJgVTIkhUSEWv7RCpcR25jACMVK283DZGejIz03F5ZkCKYkvNIMluIOGZ
      wmxLxZJkx5iYQbAkYbHZsTCBFJrm8LDI7XfdDaqKlEgAs3uCiaJ44c7z3SVSluV5bVz3UXvO
      I0kSiUTiknOyPL/e0SflNd/0iUQCSZIu+R8sVF7zTT/X8YW29Yqc4dree5k/tCRoKLFwx1OP
      k3xpFvhm3Pi8XnwF2YRdPQwkrFisOYQ9fQwPJEhYbOiDboYHB4joLSTZs7mzNoPO7l5WN1Rh
      NBqB2Q3dTCbTJcbPZ5M8SZLmtXGdKIqX2HMxBoPhknOiKGI0Ghckr/mkNxgMGI3Gj9m6EHnN
      N/1Hy38h8zrPFT1ZsYiMXvYzNhWfowmk4PN4SHE48IdhVX0p4x6RyuIc1Ewz/RMe6iuLMCRS
      6RuZoqG2FDkexepIorLYiKp1ATSuI1ckgIZb70ZN7caWXUrSx84aKa2pu+RI9Xl/CXsadee/
      GFOorTnnS2qyA5CSmn51VmtoXCOuSAAtu39HV9zO+M5dZJQ18s2vPcXVV0oaGkuHK5oJLqmr
      RS/GyatoYnVlHlqrReNm4QpqAIH03BKyU10ohnTW3rZZ8wnSuGm4ghpA5fied5jw6tERuepR
      Dg2NpcgVNYEKq2opylLoH9Z8gTRuLq6oExwJxlhz13buMgpa51fjpuKKagBB8fPj//k/+c2v
      3yC40BZpaCwiV9QJrll3O4b82bhA9oW3SUNj0dDiAmksa64sLlCGFhdI4+bkijrBgsFGdX01
      jes3Y1xoizQ0FpErqAEEqpo301Bo5Sf/+G94Ft4mDY1F44r6AO2H9zIUS+a/fv+7WhNI46bi
      sjVAPOxHNtnx9LXy61+/QWQxrNLQWCQuIwAfP/z+/82Q30B5XhG3P3yPFhRL46biMgJI4dt/
      /Rc44hOc6GznwJ4DWg2gcVNxmT6AgMWeyV0PP8FdD0MsGEK/OHZpaCwKn2mxrcWhzQNr3Fxo
      e4RpLGs0AWgsazQBaCxrNAFoLGs0AWgsa64u5JrGIhHkpX/7FRORKNuefJ7RA7+hewIe+/KX
      cLa+yUA0n+e2r+PVH/+IUY8XY/Gd/Nkzt15vo28oNAEsaew8+cILjJ05jDsxgpq0me982cju
      PhcP3P0Q8X1dCIKFJ7/+LdoP7cNcsRJVVZEUEZNei91xJWhNoCWNwNnWA0yZCmksSUOnNyDo
      9aiywsXBORQxyKhfoTgrhYSaIJoIXz+TbzC0GmApIw7zkx+/QVFdERifJDS+i3/8kZ57n3ue
      13/1L7x9xEXUYKUpJ0BqUR0mQcUvBlFULXbHBZQEx/fspMNr5fOP3UXfsXdp9zl48t6NTA+3
      I6jq0glP63K5yMnJufB9qUaHFkWRcDhMWlraJceueXRoVb3iKHySJGEwGhgLD2HTJ5FhyUYQ
      BHw+H1arFbP5wybRUo0O/dHyvxZ5Bf0TTLjA4T1Ku6WByNgkDUlTOAu3ki6d1ZpASxpBQLjC
      P1GJ44pMEEtE+GDybZyR0ett/ZLAbM0kwxakI5TDitw4+TkVVK6uwj8Vo76uRhPAjUYoHuQ3
      J37OB/17OV95K6rCTHyKqBzGFXUyHh7BrLdeZ0uXBvGQi/b+ALdvvYV0o4MJVz99p3pJK0wF
      tD7ADYUkS+xoe4U3O3dg0BkYnOnnmeYvoQoKcTmGTq+jx99BZUod6eaM623ukkCRYvSePsyZ
      04e5+6mvUp3ezalAAduzFF7+2a+uvQDcE4NMeiLkFJWRoo/TP+6htLwMYyJI3/AURWXlKGIU
      hyMJv8+HPXl57RMmRj3sfOX3jIfgyS98jta3X2bAY+WZZ+9n4Ogu3Lpq7t9ci5oI8ZO//xkP
      /eWfkiMIqKrKnp7d7Ol5m6LUEjKSsjAbZvfsDEtBEorEcGiAkBSkOqUeQdAqdwBrWgkvfPvb
      Hx7Iu5cV5z4+9fy3r70ABkfHKSmrxmY2cOZkK1nZ6XT2jaIPjpKalUVH9yBJBpHygnQGxsM0
      pqReaxOWNHqjjTsf/Tzett20jwxjyVnPF+rHODwQZ1PjSgIts0uOek4ew2SwEj2XTlFldnb+
      gbtr7ufRVU9i0pvQ6wyoqoon5OaI+wMCkpeq5DpSTWmfbIDGJVxjASSIeDx0if3Ur67DlJRD
      cXkhvlPDCJYUSkvLCZ3qQQxNs/fwBLfddScCsyMYsDw2yVMVlaGuI8wYa6hLiTEcTsWS6iDc
      E8ZqMSMnAgSmBjjY7iJFF8Y5MU1+ViqHh/cTT0TZUrYVvWpATijIiIhKnKFgH+FEkC3Zd5Ns
      TMWgmi7Ytlw2yZOlGONjEyRl5JGeZGBibBx7Vj5JRpiZceNIScdk0CFLUTwBkayM2fAO11YA
      skzj5rswidO0DU+ji/iIh1ORDAaI+ohFQ8TQY7FnsyFfz+joFHXlOctqkzzfRBt7DvZQUxtD
      zG1goHsPAydjrNxeTcvBd2ht9ZGVu4Xi3FTO9nViC0QQctPY1/cOzUXrKUgruiQPJZFgLDJE
      nrWQVEs6dmMyyZaUC9csl03y+jpa6J7w4D7VzS1FVo6Ph5CVPu5dU8hbJzrYtvlBSgvsnD66
      j7dOxPiLP38GPddaAIIe93A74z6RhqZmBL/AkZO9NKxegylq5MjxDuoam1GiATJys4gMjyIl
      FEyG5dNetWeUsf0hCzKQkZXHQw/eSzBhJjPFzHTpGp4ohNSsAppW1bPl1i3o7En0TLYx6Onn
      Kxu+8TGB+UUvftFLtaMeo85IuiVzWe7hULF6I470LtqGo4z4ZnjmySfY+85b2POq2bw6gQGI
      +sdxyZnU5YcupLu2AtAZqFy5hsrz3+2VbC04981RwtbsktnPqTYAiktLr2n2NwIGs53yqqoP
      D1jySGH2TVdUVnXJtWaHHVmRebdnF7XZ9RSnlX7sfj3+TpKNqdSkrCLDlskc23gubVQVroFg
      p/tOcTZsZ9uWOg69+TreuEhCSlzyMjj8+qscd8sMt/Wx6u67yLOr2jDoUkZVVd45+xanx1v5
      ky3/Zc43e66tELvRgcOYvKhv/qnhTtoGvazdsAH8I5zsm2HDhjXo4l56J0I0VJcQnB7maNsQ
      jes2kOWwfOQOKkoijICAYPj43qOflc5TpzjlDNLTU8njm6t4+T9+REnTHbj7DvPamwfQ6wv5
      +ne/xTZDgqP72yhJM3B8eFATwEIR9Y3z6qtvUL35IZpKbOx4+fes2PYoNTkWjhxroX71LSSb
      JHbveIW0+m00V2R/7B7OwDi/bPkJiqpg0s/dDi5KKiWuxBAW9dUfYXAoQI41xpG2DgJn2ykt
      Smf/qT7ydFN0T8RpqC7h3b37qK1v4P0PWnj8wVsvmXVVRB9KbAKdtfCaWL71qa+w9aLv3/iz
      2a17RVHkv666+IyeDVvWIskyb3V2aDPBC4XL6efhz3+R8a5jnNizh4b7HuH0gb34JscJKgrR
      QJyhk/tIWXkfwyf3E1c+7vWTbElBRaUgpYi85II589EJOhzGxQ5YaaN5fR2eENSWmEjOaWLt
      Lc2IwRAr12wgI2n2bZ+dauWddw/iyM6+8JCrqoISd6FER+E6Ou2dnXJxemJcE8BCUVxVQf/p
      Fsrq1hIwpFKVnU5qWhIp+eUUZ8yGl4n4DZRVZlOTmoZnDre3blcnScYkvt7wBc4cPs2kP04s
      MMX7e9/DG5NJxMN0dg+hE3T4p4bZs/tt+p2+Rfh1IkcOHKVu/RZKcvIJekcIuN0IZuMl14zP
      CPzRC8/i7etHBlQlgRIdB3EaOCeG2CSqenXD3FfLmYlx/p+971KYmqo1gQB6j+/jnWNtWHNq
      eLA5g1/+7n3yajaxbUUSr+0/yQP3PEGK2Md/7tiPas/la89uv+w9e04cxlHWTGVOMi0DR+md
      8uDzhi9pp9tSEgz2TTHq8/LARxoC/qiPXd1vUJtTTdwtkFeUz4EP9pAuh3CUlLHrrffYWJdJ
      a9sQq+triMVE8kuKObh3D8VfeGJhw9hLIXo7uzjZ1U3j7Q+zusrEy++08/ATj7DntZ/R0uvF
      KxpZVZPJT3++g/XbHkAPqAk/quQFQEmEkGYOoMQnSar5KwRT5idm13tiL+93zPDYE48SH2tl
      z2k3jz16P7HxNl4/Msjjjz5EfOIMO97v5IHHnqAg7dP9oA4PDjAVCmI1Gm9OAShSjLGxCYyO
      DHLSrEyMjZOUmU+K1YDH68GePDsp4pueIJgwUrFmK0V1jew/coZTZ6b4xne/y8F3dmLNaeKu
      TTK6hELIO0PNujtIuEeQFPWy7dZo2Mf+F3+GLa+aLz54J6+/soOmOx9lsvsA7757Eujii994
      jLOvv0rZmrswX+QOIisy/374f9E52camsi00NDdy+sQxqmsqmRycYc3qtbgmd1Na20jpxOwb
      Pz3Vzq5XXierZuPCF6oxna9+5zsXHSijsnn2U87jL3DnRWdq12y78FlVVVRFQg52IvqPIhgc
      WIufRzB+mt9SiJi+lCe3JHOsqwNPt5O71+Ry4FQ3/r4utm+qYd+xLmLj7Xz+8a3s3N/Kkw9v
      /tTySbZYSLFY+PL6W25OAQx1nKJz3M2UN8ymijSOjQVREh08dGsVbxxp5dZ1D5BrneC1N1op
      qa0jzRjnaMcwzRs2cvr9fegRAIGLWyWC3kZkZoyoP0YC9bJv2KZtj9L0Ydnz5Jeen/1QsIVv
      r9hy4fj9T34J4MJsp6qq7O5+k87JNnSCjlxHDu3Hj+Aob6Iy18JE+1kCkQCR6MXtZ4WoauP5
      r32NHb/6PWHWLKm93BQlgSKLIE4Rd+1EiU9iTFmNIbkRna3kMqNXdsqLIhw+FaFpbS6tnjpy
      S+0kjg6Qnl5ORkkJpvZe0lL0/Phnv6Nuy0OfaktMkjg0OMAdpXm4Drx3cwqgrHEDjoyznDjr
      ZcgT4Jknn2D/3l1YMivY0hxFD0y0t+FXY/jCEvt+91s6QiYGXQHuqbHyT3//D2SUrMIzdJyf
      v/g6RmMVD99XwvBAH1LczLVqsSaUBIZz/jwDM33kpuaxp2c3b3T8nsdXfY51xbeQYbWz67cv
      MthyhvwVt3B7cwmv/OJlbnv0ac7s38Hx490MjQdprLZwrKWHyjVbsV0j++aLGPPj7N/J9MgB
      wv5hqsvLcThSMWZvx2DNvcJh2wiHj/eyadtt2ExRvFN7mBzKwWDLwDNxhplhI6LDgH9Exx+9
      8DSv7jiNsqZizhi2YiLBvx8+yJBnhj+7dRP5zXfcnCvC3P2nafdb2LiynOO73qLqrvs4+d5u
      brvzQZyjZ9Dry9BNHcSZcyuG07ux3vogdXO0GyVJuuCm8dHj81kR5o/62N39Jq+3v8aD9Y+S
      kZTJT4/+GwBWo5Wvb/xTbinZ/JnG9T/JZeB6rQhTFZm2D77HeM+OC8fq1n+DgtLNyLKCwWBC
      MNjRWfIQzi3gn3NFWNjFS794FY+YYM2dj1FmmGDvaQ+PPXYv0bE23jg6xOOPPkRo6AR/+KCL
      ex97nNIsx4Um0MW2Ds64+dNXXgTgb+65lxSf8+asAbpOn+LkmJ/uziKevqOOl3/8I4oabycw
      dIyXX9uDIOTxpW88xNiOl/Dqs3nWYf7Eh+1aTy7FpCg/fP9/0D3VAUC3q4OKzGoAStPL+dot
      f0x5RuUN7c6gqirDnS/i7N+NweQgLbeJtJzV5FXciaDGEPQ29LZs0Fku/zuNaTz3zT+56EAR
      z9XMfkoqa+T5skYAkmvX883a9Z94m4Si8EZHGw6zmebCYop0AV7a23Fz1gDn+azOcGosgNT3
      Loai9ehSChdkTfCent28ePKXfHPTtzk10coHfXvQCTrWF2/ic83PkWpLu6pJraVUA8QjMxze
      8UXyKu6leMXnMFnS0BvMqMqs16+UUBdsTbAnEiYYi1OSng6ANxTkl60tDHs89M+4+cs772FD
      SSmKGGFkZOLmrAE+C6qqghxHDbuJ7fu/kAc/IFHQjPWJH394kSKDFAZz8lXno6gKA+4+Xjr5
      K+6rfYimwrWsyl9NTIoyONPP55ufJ9l29fefL3LCy8v/8Vsmg35uffKr9L79C8Y8Ag9/5St0
      7vol/a4Ydz71efr2vsqIcxxj9aN853MbP3YfVVWZHHwHORElq+g+nG6JgkIjUsjDpCdGQWEe
      CdGPLxghOyOZieFBwqKCLTlzXg+joqp0OJ38YM/b+GJRvnffg1RlZfOjwwd5f6AfgO/d9yDr
      imc73TpzEuVVVZoApPZXkNp/hxqYAEEHJju6jKrZz0ocYlGI+2a/X4UAEkqC3qluPhjYx/GR
      I1Rn1XJP7QMIgoASD5DaoyfZW4z/VoWDb/6UQZ+NL335EY6+9RqdzgTPffEpWt59jV5nmDsf
      /QI1ufP3m5kLnT6Vp7/+VdoP7UfQu8iseIinn5R4va2f5IL1/O/P5vD6e16e/vq3OLZ3N/lr
      Vs95HzkRY6TzJQqqtnHy2FnCop9B73oC7QeQBSMjq7di9rTTNSnw/NN34xwZYMI5wbhaxKNb
      66/a/jMT43x/15skZBlZVelyTbKzs52e6SmaCorIcThoKiz6WA29rAWgqgpS26sornb0hWux
      3P8DUGUESxqCFEYXdM6GDlNk8A5CQoT0iiu+vySL/OL4T/igfy8FKUV8ef0LrC/eiNkw2xzR
      m5J4+KkX8J7ZTfvwCNa8W/h8wyh7jw1gS6/ma+sSvHPwLJIxly89msr7fVPU5JYt0D9DoeXQ
      e6RXrqMoPcBEVxhVTiDoDShiHGQZ9Hrk8DTTiSTWJM892TTes4N4ZIqC6meoWV/GiQ/2Yc8U
      EbM2cN9t6bx+xMV9t95O+MBpwMCaLXdhb3mfmoI1CFe5AVc8keDfDx9gXXEJzzavZUf7GV4+
      1YrFYOB79z5Adc7siJNujubpkhSAq/8Mf9j9AWHFwPZ7NvGHN99Fb83h2Uc38Kvfvo5qSuG5
      5x7hjf/8JWJyLk8++QTpSVfxU8QwJGLoclZivu0v0NnPOaTJEgScCIExiM2Af2RWBOmVn36/
      i4gn4vzkyL9wavwE37n9L1ldsAa4tFOt0xkY6z2M197AqrQgTncyyVlpBHoD5BSkY80SUEM+
      LPIY//n7Xm654/HP/huvkERkkJ2vHyG96CxbHnyG+PSb/H+/MPDU156j853f8jICCW0AABnW
      SURBVA//2sojX/wa46NtlFXXo5+jm+Kf7qDn+D9R2fxH2NPKOLb3bfKa7qAoLUL3sQ5iIRMG
      86WjarIYZMCtcs8aB+6pzyYAVVXxRiL89Nhh/NEYf33vZnIcDr65aQuqqnJreSUVGZnodTqi
      QQ9Od4DcgiKMcpgxl5+CosKl2QlWVRUp4uHABy0kDAZWrduEf+gQPb0SK+68FSbbmOiZ5Kxs
      oKqgiA1rV2GZY1HNp3aCVRWx/VXi+/+BpC+8hC6l8MNzoUno/j1qyIVgTQVrBuSvgcwPPQwv
      1wl+q+t1Xj31G759+1+wMm/1nDb4xs/wny8dprq2mIrqao4f2A/RGM2PPM6pPTvRiRFKNj7I
      4In3SEmxoCSt5KFtKz52n/P5X89OsBQP0LLrzzAYk1hz7w/RKT7+6Qc/Q3VYaLpjO7bpExw5
      G+TBJ5+ka+/POdLppnHTA2xbaWE8UUJ9seOKO8GKqnJqfIxDA/20jI4A8PWNm7m1/OO182x6
      hQO79uGLhSC9DIOri4hqwFq4amnWAHJgkn2t/azdvIXBE4eQVRVkBZ0OEoqKTpURBD0ZuQVY
      Qk5OdKewueGzNQ2UqAfx2H9grH8MITn/0pNSGAwW5NJtGJLSQW+GpKwrvveYb4TXTv+W7Suf
      oCGv8RNHhuyZ5Tz8kBUZSM/Ov7A6rCAnjcIH7scb01GUl0ld1r24gxLFJYVz3ud6o6oKQ22/
      IBIY5ZbtP0OnN4E+m2/9t7+86KpSzntF5D/2de7/3IcP9WcJi6CoKm92tPGTo4cpTc9ge8Mq
      bq+sIt32adN/Zjbfex/tR95HyTDhjNTx2LZqXn/v9NIUQPvxQ5w+NUxf/wCP3r2e3//iR5hT
      K3j2sTX84mc/BXsuX/j8fez+1Ysci+l4cNWWy9/0IlRVIb7//0UwWjCt+9rHQ4iklECVAwUT
      mK2gN3KlS63iiTg/PfojyjOquL9uO7pPCU9y8eowURQxOWZXhwE40nMu7MmckplLyif7ii0Y
      vqk2zrz337GnVZBVuIn8qofQGyyoqoKqKohRD87+XYgxD0Ntv6L+1v+GLbl4wexRgZ2d7fzk
      6GG+sn4jDzWsnHVauewwt8LpA+9iq9pEVY7KcPtx4rEIgk6/NAWw+q4nWH3Xh/MAf/rtP79w
      7pvf+jDGy5NffeGq7p/o20Oi922sD/wAnS394xfoDJCUDaIIhs/WVDg0+AFDngG+f//fYdQv
      qE/mgqGqKlLcz+DpnxH2DRLxjzA1/B5BTx+p2SsZPft7BEEgFnYR9g0iCHoqml4gr+K+BZ3A
      G5qZ4Zctx3h6dTMPNTTM2amdk0SQEy0dhE+eZWD9XVTmS/z4F69zx/YnlqYArgZ54hRS5w7U
      yAzG1c9iKJ5jjFoWSfS+Q/zAP2Ksexh96W3X1AZXcJLfnXmJu2ruoyCl6JreezGQpShTo/uZ
      HHgHn+s0CSlEQfUjZBRsQKcz0Pb+9xjtfpX0/A3YU0ux2vOIhpxkF99O5ZpvLmgwrqgk8aND
      +ylJS+fxxqZPrVk/hiGVr/2X7150YAUrbjl36ppauZioKmoiSqL3XeJH/hk16EKXVQOKROzd
      v8X2uV+gxsIoeh2CoEM8/Rvk4UMo7h6wpGK+9c8RdNemwFRVpX+ml/918B/IdeTxcP1jN5Qr
      g6oqeJwttH/wfaR4gLTcJiqa/4jMwk1Y7XkXrrMlz4ramlKFyWRCVVUatvw1CLoF/b2KovDb
      1haGvR7+xyOPY75Kz4C5uPEEoKoo3kHEU79Bdp5GmekHOY4uo/LcQx8g8tKXiL76AkpgDOQE
      GC0QD3Hev1mftxIMH12kffVMh6b418M/pCqrlq/e8k3sZsflEy0RZmdu36X9/b8hp3Qb5U0v
      kJQyt4tyStbsRNV5121BEECYy+/y2nJgsJ83O9v5k823kZ98bZd/3nACSAy8T2zv3yKY7Bhq
      H0C35nnk8RMYqu9F0BsRkjKwbPsrxCP/gmHLX2LMqUUNTSEPHUCNBzGt/Qq6lCIE/bX56d2u
      Tl459Wv0goGv3/LHJJmXkif+5Qn7Buk6/AMKah6hdsP/hu4T+i1TA238Ydf7iKZUHrl3PTt+
      txN9cinPbl/H7n27yCl7kI1lCX792pt4IgKPPfMcpVnzc8xOKAq/azvDy6dPck9tHbdVVl3z
      mmZJzgOc56POcLKrg8grX8dY9xDmLd8FgwVBmA0tAx+OBpz/SYlE4sI8wPlj18LF+Pw8QEpq
      Cn/80vME4wHur9nOc+u/siBR6OaT/tPmAaKhSVp2fhNzUjbN9/wQg/GTlxKqqooiRTm+fz/T
      MT1NGzcSGTqEkruFkrQxTp60sHFjAagy7ScOYStopCJ/7rf1lWyQoagqO9pO84vjx/j6xk3c
      X1d/Vf/by/1fb5gaQI0FiL33d+jzGzHf/hcIehOuoQ7ah/2s27AexTvM6QEv6zc0I0Q99E1G
      qCnNI+Qe5djpflas3UBeqo2Id4I3dryJT7XzxBP38/4fXsZLLs88sZVTR94mnrye22qT+MPv
      X2PcDw8/8xyl6XM3lwQEVuY30jt9ltqcq/djWUxUVSUemSbq89J+4G/RG200bPmbT334AZSo
      j/3HT1GxciN0HEcvCLP7lV0Ut1VA4vj+QySV1FD+CQ//leCLRvn3wwc4NjzEs81rrvrhvxJu
      CAGoikz84D+i+kawPv1zBL0JCDM4HCTbHOZIeze+ztOUFqZy8MwA2aqTnokENaV5DAwOk5ef
      zOEDJ3n0oc0YbKk8+PSXGT32Jq2dfRSvvo+1YhsdTpWGdSs5cSyOzpLHg09/ie7DO3E6Q58s
      AEHgjzZ9i7gUw6S7MXZlnBzYTefBv0OR49jTK2m66++xJH08JtFHadu/i/daRunqH+fO9XW8
      +LN/w2jL4fGHxvjJv/+SvkEHxkQNL75zhuLsXvRPPU1N3tWJ4NT4KPt6ezDpDazOK1jQDvbS
      F4AUId7yH0hnd2F94AcIqecnWmysWVfL4UMnqF2lp8vTzLqNqbx5xMWqOzbg9rcA0NC0lvaW
      w5TVrkAAjHoDnacOIOesp0yYQDElYbenEg8lSLHbgBg6vYHOAztoHYlye+XcD7YsxZh2e8jM
      SEdVogyPjFJUVoZBjjA+4Sa7sBiTGmNsYoqMvEIclus/JxCPuBk883PEmAd7ehVr7/9njKYr
      67A33vMMjffMfpYkie/UN1849yff+v6Fz2u3PDxvO1flF3BLSRm5yQ7ykhfWRXzJCkBVEsj9
      exFbforqH8Fyx19hKNl8URxJiSMHj7Fi41Yy7VGOeY/gn06gM1/a3jt19BCZVWspyZl9G42d
      PcrBU2NUlClklBey/9AuhGiUTY/W8P67+zjWIpOdKzETMZJilBl3zlCZ//GHpLetjS6Xj+ee
      foT9b79DWG+ka9hFuujCL5iJnx2hyODFKZqJtfXx1Pa7r3sQJtfQXlRVprL5T/B4jRw5PcLm
      tXUMd7YyraSxfmU5Yz1nGA5b2NRUjWuwk55plVvXf3zSaWHeyirusV6iphz+j3vvpa+thVNd
      Q2xqqmWk+yTjESu3NNfi7G9jwCOwcd1KjPPcXGXRBDDa3Urn8DTFtc0YRD+VZQWc6RxgRcOK
      j/0INR4i9vZ/JzF0EEPVXZju/T/RpZddGkRVCnC2vZOTXd003fEIqyr0vLK3m+1PbOedV39K
      a58fd1SH0dPGwdYOimo388g9a8gqXcV9plxUnZ7sohIesNsRDQ6yk03oym8hv0QgPSuHdIeV
      kChQXjb31H5t8zoSHScBASniZ9Adw6+b5vY8I/3OSQJRI5n1NgYHxol5wb/9bq73thUF1dvJ
      q3yAkG8GjzSD2XWM/W0WpgemSY2e5oTVQH/HCHk6D4fNJkY7+yhOiXCgs4DbViy89bIkMdrV
      hjtdR7p+go4hkWyhjUN2HTPdMxRnRNl/2oh/eISKAgMHTmVxR3Pe5W/8KSzSKJDKyZMnWd24
      gtOnB9Dp4hhUmdSSevLSrBe8bM6PAihRH+KRf0ZX8yC67Poltz/A+VGg9o6TbNh4B3pkpFiI
      197ax+ceexhBTfCb13byzBPbEVB45aXXefTZJ/i0MZ7FHgWKByY5eKSP0oZ0EpECqrNGeHl/
      lPraIlaUS7z+6yGKNhTQVJHB+/tHuOvutQtuq8vlIscUZu+Ijs3lJv7zP15E1gWwVj2AMHCA
      uEVGl7QeW/AEAcGI0dbA176w9aryOs+i1QDCudlCARU1EccXlcjQzb36VWdNxXLHX10YBl2K
      HNm5k2N9PZx1C2wpSLD7UDe3P/ocox2H2bn/DOvuegpXbys79hyjYcv2T334F5uof5LWLidb
      79tK2NnFKe8Udv8IWQU1TLqnyVU92MpzmHJ58du8KI7Fd+swJeXw/J/+Gb37X8NbWsn6uxqZ
      at9Dh76arXW3EBw6zKHp+TveLdo8QO+pQwy4AuSUr8Io+qitLKa1rY9Vq1dhPufLf70XxX+U
      675R9jVIP1cN4Bo4yYuv7UOwmHngqS8ydnwnY1IOT23fzIk9b9Djt/K5x+6m88BbnJqQefqp
      R7AbhcvmNV9bx4aH2fu7V3AmBG5/6GncJ9/Cb63gyQc28/4bLzJFPk88tIWju19jKJLMU4/d
      T5Lp03tWl7N10QTw0WzmmsDSBLC4E2HXOq/5pl+IneI/UxMoGo3Oa/Oz+RKLxfD7/Re+n98c
      T3eVTmuJRAK9Xn/VD+X5meS5jsdisUvsWqi85ps+HA5fsHeh85pv+o+W/0LmdZ5LzsznbXkt
      MBgMl7yp5isAg8GATnf1nop6vX7Of55Op0OW5UtsNRgM6PVX7xj2SXnNN308HsdsNl8S4W6h
      8ppv+o+W/0LmdSHPi78YjcY5QwEuFgaDAYvlw1lXRVFQVfWqH6z5vpU/KTSiTqcjkUhcYutC
      5TXf9LFYDJPJdMmDtVB5zTf9R8t/IfO6kOdV33kREARhXjXS1dYc5/kswlvMvOabfjHzmm/6
      hc5ryQtgPsz3ofws6Rczr/mm12y96Py87r4AiNEQ09MziLKCLMVwu2eQZAU5EWfG7UZMKCgJ
      kRm3m5h0Pka+Sjjgxe3xISsqsXAAjy+IooIUjxKKzHYAxVjowjUXI0sxpqenicZn49jPuN3E
      JXn28/Q0oaiIqiTwzriJxBMX8oyG/Ey7PSQUFTE6e29FBSkWxj3jRVZUEmIU97lrYHb1ld87
      g8cfQlUVgn4P/lAUVVWJRYJExQSoKpGg79w1F9uqEo+GmJ52I8kqUjzCtNuDrDL7eXqamCQj
      S3Hc025EWb2QLujzMOMLoJy7tzcQRlVnf4PHH0RRZ/9vM97ZawAUWcLjniYYiaOqMt4ZN+GY
      hKoqhIN+RBlQVQLeGQLhGJcyV5kEUFSIhQNMuz1IsjL7v7qoTFQlgW/GjS8YufC/CkbioCoE
      fR784RioKiG/F1/wwzhCCfFcGYqJC89HPCGjKjLBQABZmb23131xGS619QCTTnzTTmJyAtmU
      iyU6TkQBkvJIkabwJUAxpJFrCDAZVZCEJG5dswJifk50DaJEo2SVFTF2dhCdAYrrVhIZH8Cr
      2tjQWMnx/QdAbyC5ZAU1BR8uhh/ubcMXSRCRzGSaQvhEkA2plKSCKxAlEE5QmWlkyCeSkA2s
      b1pB1D/FqNONLMaxZuTinxhFMEBaYRX+4R4w6rFllyFN9pPQ6TGkFdNYVUDM56R9YIrojJ+q
      tZX0tg8jxiXWbW5ivO0E8exG6rMFjp9oQxXjVGzaRq713HtKjtPV1YWUSCAb0xBCLmSdiiGt
      DIfkISQliCgm0tQgQUVANmZQU5yBRY1wZmAKORSidGUFPaf7EASoa67n7IkzCDqBslWrGT7T
      iiAI5NavpzTDhnu8j1F3mHAgTnGRg4mpMKKo0lhfxEj3GczV95CfGOTkoBtBFGncuAnH+fmC
      uJ8TnReVSc8gej0U1tbhHx5FUqKYssqIjJ0FnQFHcR1pxgRWIU7fhJewJ0R5fT7DA9PEYxKr
      VpbQ3TOGHBepW1nN2Z5BiMep23Q7GWaBoZ42AtEE4YSZTOOHZViZbaR3aIyapi2IY2cY8Ikk
      ZCO3bliFThDQf+973/veoj/pn0A4HKG4rAIp7MNiTyMiyTQ1NTE10kvCYKdpdSNTzgESqpXG
      ptV4XGPk5eWB3kxudgaBgJ90o0Q8vZZVBUk4gwnqKorxh8Jkp+lw++00rcpnxBkiL+vDaDQp
      6dkY5AiqOZmoGKe5qRnf5AjF1fXYDTKSaiIcFVnd3ETQO0laeiayKlBSUkzI7yHZoieelE9j
      RQHO8T50jmKaaosZcw2h02ezurGSCaebvJxM9GY72akWvFGJVH0ES+Fqqqw+pkxF1GQZmZHM
      2PRBdOZCVlZa6Js0kHfeHVvQk5mdQzzsxWZNImaws3plPc7RQeoaVqLGQxhtVmJxA42rVzLt
      HCUtLRWjLZnC7DR8oQiZhjCJnGbq0xOMez1Y0upoKjHS5/FjMxfRVJ/O4KREXqYdqyONFJNC
      UDaCHKNqRSOW2BS6rCoKbTF8umyi3knKq+pwmKLElGSSbeda1efKJHhRmawstOMMytTXVhAN
      BHCkG4nH02laVcCoM0iyzUh6dj4Zdj3eONiEGNnlq8kRZhgIqZSX1VFsD9M+naCquJLiHHAF
      LGQmm86VYRjVlEJUjNHc1Ix3coSiihWY5BAGezYup4vG5iYCnkmysnLQ6YSl1gRSGTrbiTmz
      nJK8FGRJJCHFUDChSnHEhISi6tAlROIJ6cOmjBKns62L4pqVpKclI4ZDxOIixouHvwQjkhhG
      jMXRf2RYzDXSR0iXSk1pLqokISVEEoqekGsYZ0hPfU0pZlUiIiWQZWV2Fk+RONvWTlZZPblZ
      KYiRCJIUQ2e0IkUjiJKITmcmIUZJSCKca4tKUT/dAy4aVtVjMhgRoxECYQXbRYMfOvTExQjR
      YBjTxSdQGOzuxJZdQVFeKlIshixFUTHiHOhGsuVQUZSHKsWREgkU9dwKuUSEjq5BqlY04LAn
      EQ8FCUcTWGwWxEiISCSOxWJFjIeJhSMYz3nUBt3jDHtlGleUo1MVREkiGlMwXfTvM6EQjkuI
      0TiGi0+os2VSdFGZxGMiRoOOvs42UopryEtPQxLDSLEYOuNs2mhgmt7xIKtX1WBAIB6PEY7I
      JJkF4vE44XAch8VARIwTC0UwWs5trjHcS0ifTk1pzoUylBX9Jf6Txo+WISytGiAU8DPU18Wk
      a4qomkSuTeL4qW4KqxvIsogcP9FGblk9OanQcvwUGUXVZKYkkQhOcqJ7mKnxMUxZpSiubvqm
      o9RUFtB2+CgjExPI5mwc6jRt/W6qaiqxmT8srO72E0y6ppkJK5RlWzna0kZmSRVBZz/jky7G
      Z8LUlGXTcrSFpKwSstKSiPldnB0cxTUxjmrPxRIeo2NoisraRgyRUc70jFNevRKbPE1rxzAl
      VTUkW00EJ/tp6x/HOTZBTnkNk90tuFQHVVkmjh46wbjTSUpOKeHJs/ROwer6YgznCkuRIrR1
      tDPpdBLTp5Iu+Glt76eiro6Rni4mXU68cQOFadBysoO8ihVYDaCGnJzsdTI1MYajsIbQYCuj
      ET0rqmrwjZ6hz61SX1NFdLqHrtEIK+rKMBt0jPZ3MDI+iXPaT3lpPmdOnIDUAtIEP0dbu3BO
      e6ioKKa37SRhIZXKkhzOO/YmAi5OdA8xNT6GMbMUdeosvdMRasqyaD/dw9TUOAlTFkmKizN9
      biprKlGlOFHPBD3DTpwTUxSWl9F/5gQhSyaryvLoaT/BjJxKU20hQ12ncIatrKjORy9Ad1vL
      RWVo4WhLO1kl1YjuAU53DeD0RqmvyKHl2Ans2aXkZiQjCEutDzDHVPhSZC5XiKXKXK4QS5Xr
      Uf5LrAmkobG4aALQWNZoAtBY1mgC0FjWaALQWNbcNAJQ5Ri//81v8IkSO158hdiSGdv6OInQ
      BL98eTfx0BQ73txHYgnbGpo4w8u7ThAcaWXnoZ7rbc6noNJ9eDeHuyYYbn2HIz0zV5RqSc0D
      hMNh7Pari60pCHpM0hR7975PUtVmslQXb729F8mSQWS8jXf2HsKYmc/gyWN0jE1SlJ+P/ipD
      asiyjCRJWK2fHk3tk9AZ7fh7DtLSO0pp461IY6d5Z38L9qw8Bk68x4GWLjLz0mk92sqg00tp
      Ue5V5QOz7tBGo/GqfeqNSRn0HtvFycEAt92+gd5jezlwqp/8whwO736dk/3TFGTo+eCDVryi
      QH7WZ9nv5VLmU/4gkJaZwr539zLkinPn5loOvrOLtmEvualG3n1rJ4MzCWxxNyfb24gaM8hM
      ttw8NQCCQNnKtbinQ2xelc++HTvwRCKcPHkG57gTMTDCO0e66Dh5hsoVqzDOsafYYtq6+d5t
      9A2GWF0Mr736NrGgi46uHkadHqYHz9DaPcCxlh7Wrll1/ewEBJ2B9avLka0FpApOdrxxFN9o
      J32jTibcIU4f3s/49CjtQ0FW1pRcV1v11izqU3xkrdrKVOdhjnSMMd59goExF76wyPvvvMvE
      WB8uJZPq/NmAWzePAADBaCE3OxWj3khhWSGKrKe4MJuhwWEs9mR0goDNnklmmu0q9mK/tuhs
      qeRn2NHrkigqSEVnSSUv1Uj/yCTJKbOFk5FbdNlF34uBxZ5CZrodgymDvBwL9qxCktUAQ1Mh
      HHYbqAK5+UWY59o6cpFJSU4mOSWZ1JwCbEaVzMJSRPc4njg4rGbARFFR7oVAXzfZTLB6bqG9
      wPm9AOZEmDscy5VybWaCZ229OHL1nMzT1msxE3ylj8h8129ci5ngz2rrkl4Q89kRLnJ+uv5v
      o0/nQ1uX+m4yS92+i/mstl7/+lVD4zry/wMD0ry7R9+AIwAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
